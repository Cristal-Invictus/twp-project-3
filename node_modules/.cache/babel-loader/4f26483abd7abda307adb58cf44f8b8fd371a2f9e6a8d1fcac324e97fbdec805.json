{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport postService from '../services/postService.js';\nimport commentService from '../services/commentService.js';\nimport Swal from 'sweetalert2';\nexport default {\n  name: 'CardDetailsSafe',\n  props: {\n    isVisible: {\n      type: Boolean,\n      default: false\n    },\n    task: {\n      type: Object,\n      required: false,\n      default: null\n    },\n    categoryName: {\n      type: String,\n      default: 'Catégorie inconnue'\n    }\n  },\n  data() {\n    return {\n      // Editing states\n      editingTitle: false,\n      editingDescription: false,\n      // Edited content\n      editedTitle: '',\n      editedDescription: '',\n      // Status\n      currentStatus: 'todo',\n      // Comments\n      comments: [],\n      newComment: '',\n      loadingComments: false\n    };\n  },\n  computed: {\n    statusIcon() {\n      const icons = {\n        todo: 'fas fa-inbox',\n        'in-progress': 'fas fa-clock',\n        completed: 'fas fa-check-circle'\n      };\n      return icons[this.currentStatus] || 'fas fa-inbox';\n    }\n  },\n  watch: {\n    isVisible: {\n      immediate: true,\n      handler(newValue) {\n        if (newValue && this.task) {\n          this.initializeCard();\n        }\n      }\n    },\n    task: {\n      immediate: true,\n      handler(newTask) {\n        if (newTask && this.isVisible) {\n          this.initializeCard();\n        }\n      }\n    }\n  },\n  methods: {\n    initializeCard() {\n      if (!this.task) return;\n      // Initialize editing fields\n      this.editedTitle = this.task.title?.rendered || '';\n      this.editedDescription = (this.task.content?.rendered || '').replace(/<[^>]*>/g, '');\n\n      // Initialize status\n      this.currentStatus = this.getTaskStatus(this.task);\n\n      // Load comments\n      this.loadComments();\n    },\n    getTaskStatus(post) {\n      if (post.meta && post.meta.task_status) {\n        return post.meta.task_status;\n      }\n      if (post.status === 'draft') return 'todo';\n      if (post.status === 'pending') return 'in-progress';\n      if (post.status === 'publish') return 'completed';\n      return 'todo';\n    },\n    // Title editing\n    startEditingTitle() {\n      this.editingTitle = true;\n      this.$nextTick(() => {\n        this.$refs.titleInput.focus();\n        this.$refs.titleInput.select();\n      });\n    },\n    async saveTitle() {\n      if (!this.task) return;\n      if (this.editedTitle.trim() && this.editedTitle !== this.task.title.rendered) {\n        try {\n          await postService.update(this.task.id, {\n            title: this.editedTitle.trim()\n          });\n          this.$emit('task-updated', {\n            ...this.task,\n            title: {\n              rendered: this.editedTitle.trim()\n            }\n          });\n        } catch (error) {\n          console.error('Erreur lors de la mise à jour du titre:', error);\n          Swal.fire('Erreur', 'Impossible de mettre à jour le titre', 'error');\n        }\n      }\n      this.editingTitle = false;\n    },\n    cancelTitleEdit() {\n      this.editedTitle = this.task && this.task.title ? this.task.title.rendered : '';\n      this.editingTitle = false;\n    },\n    // Description editing\n    startEditingDescription() {\n      this.editingDescription = true;\n      this.$nextTick(() => {\n        this.$refs.descriptionTextarea.focus();\n      });\n    },\n    async saveDescription() {\n      if (!this.task) return;\n      try {\n        const updatedPost = await postService.update(this.task.id, {\n          content: this.editedDescription.trim()\n        });\n        this.$emit('task-updated', updatedPost.data);\n      } catch (error) {\n        console.error('Erreur lors de la mise à jour de la description:', error);\n        Swal.fire('Erreur', 'Impossible de mettre à jour la description', 'error');\n      }\n      this.editingDescription = false;\n    },\n    cancelDescriptionEdit() {\n      this.editedDescription = this.task && this.task.content && this.task.content.rendered ? this.task.content.rendered.replace(/<[^>]*>/g, '') : '';\n      this.editingDescription = false;\n    },\n    // Status management\n    async updateStatus() {\n      if (!this.task) return;\n      try {\n        await postService.update(this.task.id, {\n          meta: {\n            task_status: this.currentStatus\n          }\n        });\n        this.$emit('status-changed', this.currentStatus);\n      } catch (error) {\n        console.error('Erreur lors de la mise à jour du statut:', error);\n        Swal.fire('Erreur', 'Impossible de mettre à jour le statut', 'error');\n      }\n    },\n    // Comments management\n    async loadComments() {\n      if (!this.task) return;\n      this.loadingComments = true;\n      try {\n        const response = await commentService.getAll(this.task.id);\n        this.comments = response.success ? response.data : [];\n      } catch (error) {\n        console.error('Erreur lors du chargement des commentaires:', error);\n      } finally {\n        this.loadingComments = false;\n      }\n    },\n    async addComment() {\n      if (!this.newComment.trim() || !this.task) return;\n      try {\n        const response = await commentService.create({\n          post: this.task.id,\n          content: this.newComment.trim()\n        });\n        if (response.success) {\n          this.comments.push(response.data);\n          this.newComment = '';\n        } else {\n          throw new Error(response.error?.message || \"Impossible d'ajouter le commentaire\");\n        }\n      } catch (error) {\n        console.error(\"Erreur lors de l'ajout du commentaire:\", error);\n        Swal.fire('Erreur', \"Impossible d'ajouter le commentaire\", 'error');\n      }\n    },\n    async deleteComment(commentId) {\n      const result = await Swal.fire({\n        title: 'Supprimer ce commentaire?',\n        text: 'Cette action ne peut pas être annulée',\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#d33',\n        cancelButtonColor: '#3085d6',\n        confirmButtonText: 'Supprimer',\n        cancelButtonText: 'Annuler'\n      });\n      if (result.isConfirmed) {\n        try {\n          const response = await commentService.delete(commentId);\n          if (response.success) {\n            this.comments = this.comments.filter(c => c.id !== commentId);\n          } else {\n            throw new Error(response.error?.message || 'Impossible de supprimer le commentaire');\n          }\n        } catch (error) {\n          console.error('Erreur lors de la suppression du commentaire:', error);\n          Swal.fire('Erreur', 'Impossible de supprimer le commentaire', 'error');\n        }\n      }\n    },\n    startEditingComment(comment) {\n      // Sauvegarder le contenu original et activer le mode édition\n      comment.editedContent = comment.content.rendered.replace(/<[^>]*>/g, ''); // Retirer les balises HTML pour l'édition\n      comment.isEditing = true;\n\n      // Forcer la réactivité pour Vue 3\n      this.$forceUpdate();\n    },\n    async saveCommentEdit(comment) {\n      if (!comment.editedContent.trim()) {\n        Swal.fire('Erreur', 'Le commentaire ne peut pas être vide', 'warning');\n        return;\n      }\n      try {\n        const response = await commentService.update(comment.id, {\n          content: comment.editedContent\n        });\n        if (response.success) {\n          // Mettre à jour le commentaire local\n          comment.content.rendered = response.data.content.rendered;\n          comment.isEditing = false;\n          delete comment.editedContent;\n\n          // Forcer la réactivité pour Vue 3\n          this.$forceUpdate();\n          Swal.fire({\n            title: 'Modifié !',\n            text: 'Commentaire mis à jour avec succès',\n            icon: 'success',\n            timer: 2000,\n            showConfirmButton: false\n          });\n        } else {\n          throw new Error(response.error?.message || 'Impossible de modifier le commentaire');\n        }\n      } catch (error) {\n        console.error('Erreur lors de la modification du commentaire:', error);\n        Swal.fire('Erreur', 'Impossible de modifier le commentaire', 'error');\n      }\n    },\n    cancelCommentEdit(comment) {\n      // Annuler l'édition et restaurer l'état original\n      comment.isEditing = false;\n      delete comment.editedContent;\n\n      // Forcer la réactivité pour Vue 3\n      this.$forceUpdate();\n    },\n    // Task management\n    async deleteTask() {\n      const result = await Swal.fire({\n        title: 'Supprimer cette tâche?',\n        text: 'Cette action supprimera la tâche et tous ses commentaires de façon permanente',\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#d33',\n        cancelButtonColor: '#3085d6',\n        confirmButtonText: 'Supprimer définitivement',\n        cancelButtonText: 'Annuler'\n      });\n      if (result.isConfirmed) {\n        try {\n          const response = await postService.delete(this.task.id);\n          if (response.success) {\n            this.$emit('task-deleted', this.task.id);\n            this.closeModal();\n          } else {\n            throw new Error(response.error?.message || 'Impossible de supprimer la tâche');\n          }\n        } catch (error) {\n          console.error('Erreur lors de la suppression de la tâche:', error);\n          Swal.fire('Erreur', 'Impossible de supprimer la tâche', 'error');\n        }\n      }\n    },\n    // Modal management\n    closeModal() {\n      this.$emit('closeModal');\n    },\n    // Utilities\n    formatDate(dateString) {\n      const date = new Date(dateString);\n      return date.toLocaleDateString('fr-FR', {\n        day: 'numeric',\n        month: 'long',\n        year: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    }\n  }\n};","map":{"version":3,"names":["postService","commentService","Swal","name","props","isVisible","type","Boolean","default","task","Object","required","categoryName","String","data","editingTitle","editingDescription","editedTitle","editedDescription","currentStatus","comments","newComment","loadingComments","computed","statusIcon","icons","todo","completed","watch","immediate","handler","newValue","initializeCard","newTask","methods","title","rendered","content","replace","getTaskStatus","loadComments","post","meta","task_status","status","startEditingTitle","$nextTick","$refs","titleInput","focus","select","saveTitle","trim","update","id","$emit","error","console","fire","cancelTitleEdit","startEditingDescription","descriptionTextarea","saveDescription","updatedPost","cancelDescriptionEdit","updateStatus","response","getAll","success","addComment","create","push","Error","message","deleteComment","commentId","result","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","isConfirmed","delete","filter","c","startEditingComment","comment","editedContent","isEditing","$forceUpdate","saveCommentEdit","timer","showConfirmButton","cancelCommentEdit","deleteTask","closeModal","formatDate","dateString","date","Date","toLocaleDateString","day","month","year","hour","minute"],"sources":["/Users/akoyessoucristal/Rendu/C-DEV-121-COT-1-1-twp-cristal.akoyessou/src/components/CardDetails.vue"],"sourcesContent":["<template>\n  <div class=\"modal-overlay\" @click.self=\"closeModal\" v-if=\"isVisible\">\n    <div class=\"modal-container\">\n      <div class=\"modal-header\">\n        <div class=\"card-title-section\">\n          <div class=\"card-status-indicator\" :class=\"currentStatus\">\n            <i :class=\"statusIcon\"></i>\n          </div>\n          <div class=\"title-content\">\n            <h2 v-if=\"!editingTitle && task\" @click=\"startEditingTitle\" class=\"card-title\">\n              {{ task && task.title ? task.title.rendered : '' }}\n            </h2>\n            <input\n              v-else\n              v-model=\"editedTitle\"\n              @blur=\"saveTitle\"\n              @keyup.enter=\"saveTitle\"\n              @keyup.esc=\"cancelTitleEdit\"\n              class=\"title-input\"\n              ref=\"titleInput\"\n            />\n            <div class=\"card-meta\">\n              <span class=\"card-category\">\n                <i class=\"fas fa-folder\"></i>\n                {{ categoryName }}\n              </span>\n              <span class=\"card-date\">\n                <i class=\"fas fa-calendar\"></i>\n                Créé le {{ task ? formatDate(task.date) : '' }}\n              </span>\n              <span v-if=\"task && task.modified !== task.date\" class=\"card-modified\">\n                <i class=\"fas fa-edit\"></i>\n                Modifié le {{ formatDate(task.modified) }}\n              </span>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"header-actions\">\n          <div class=\"status-selector\">\n            <label>Statut:</label>\n            <select v-model=\"currentStatus\" @change=\"updateStatus\">\n              <option value=\"todo\">À faire</option>\n              <option value=\"in-progress\">En cours</option>\n              <option value=\"completed\">Terminé</option>\n            </select>\n          </div>\n\n          <button class=\"btn-close\" @click=\"closeModal\">\n            <i class=\"fas fa-times\"></i>\n          </button>\n        </div>\n      </div>\n\n      <div class=\"modal-body\">\n        <div class=\"section description-section\">\n          <div class=\"section-header\">\n            <h3>\n              <i class=\"fas fa-align-left\"></i>\n              Description\n            </h3>\n            <button\n              v-if=\"!editingDescription\"\n              @click=\"startEditingDescription\"\n              class=\"btn-edit-section\"\n            >\n              <i class=\"fas fa-edit\"></i>\n              Modifier\n            </button>\n          </div>\n          <div v-if=\"!editingDescription\" class=\"description-content\">\n            <div\n              v-if=\"task && task.content && task.content.rendered\"\n              v-html=\"task.content.rendered\"\n              class=\"description-text\"\n            ></div>\n            <p v-else class=\"no-description\">\n              <i class=\"fas fa-plus\"></i>\n              Ajouter une description...\n            </p>\n          </div>\n          <div v-else class=\"description-editor\">\n            <textarea\n              v-model=\"editedDescription\"\n              placeholder=\"Décrivez cette tâche...\"\n              class=\"description-textarea\"\n              rows=\"4\"\n              ref=\"descriptionTextarea\"\n            ></textarea>\n            <div class=\"editor-actions\">\n              <button @click=\"saveDescription\" class=\"btn btn-primary\">\n                <i class=\"fas fa-save\"></i>\n                Sauvegarder\n              </button>\n              <button @click=\"cancelDescriptionEdit\" class=\"btn btn-secondary\">\n                <i class=\"fas fa-times\"></i>\n                Annuler\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"section comments-section\">\n          <div class=\"section-header\">\n            <h3>\n              <i class=\"fas fa-comments\"></i>\n              Commentaires\n              <span class=\"comment-count\" v-if=\"comments.length > 0\">({{ comments.length }})</span>\n            </h3>\n          </div>\n\n          <div class=\"add-comment-form\">\n            <textarea\n              v-model=\"newComment\"\n              placeholder=\"Écrire un commentaire...\"\n              class=\"comment-textarea\"\n              rows=\"3\"\n              @keydown.ctrl.enter=\"addComment\"\n            ></textarea>\n            <div class=\"comment-actions\">\n              <button\n                @click=\"addComment\"\n                :disabled=\"!newComment.trim() || !task\"\n                class=\"btn btn-primary\"\n              >\n                <i class=\"fas fa-paper-plane\"></i>\n                Envoyer\n              </button>\n              <small class=\"shortcut-hint\">Ctrl + Entrée pour envoyer</small>\n            </div>\n          </div>\n          <div class=\"comments-list\">\n            <div v-if=\"loadingComments\" class=\"loading-comments\">\n              <i class=\"fas fa-spinner fa-spin\"></i>\n              Chargement des commentaires...\n            </div>\n            <div v-else-if=\"comments.length === 0\" class=\"no-comments\">\n              <i class=\"fas fa-comment-slash\"></i>\n              Aucun commentaire pour le moment\n            </div>\n            <div v-else>\n              <div v-for=\"comment in comments\" :key=\"comment.id\" class=\"comment-item\">\n                <div class=\"comment-header\">\n                  <div class=\"comment-author\">\n                    <i class=\"fas fa-user-circle\"></i>\n                    <span>{{ comment.author_name || 'Utilisateur' }}</span>\n                  </div>\n                  <div class=\"comment-date\">\n                    {{ formatDate(comment.date) }}\n                  </div>\n                  <div class=\"comment-actions\">\n                    <button \n                      v-if=\"!comment.isEditing\" \n                      @click=\"startEditingComment(comment)\" \n                      class=\"btn-edit-comment\"\n                      title=\"Modifier le commentaire\"\n                    >\n                      <i class=\"fas fa-edit\"></i>\n                    </button>\n                    <button @click=\"deleteComment(comment.id)\" class=\"btn-delete-comment\" title=\"Supprimer le commentaire\">\n                      <i class=\"fas fa-trash\"></i>\n                    </button>\n                  </div>\n                </div>\n                \n                <!-- Affichage normal du commentaire -->\n                <div \n                  v-if=\"!comment.isEditing\" \n                  class=\"comment-content\" \n                  v-html=\"comment.content.rendered\"\n                ></div>\n                \n                <!-- Mode édition du commentaire -->\n                <div v-else class=\"comment-edit-form\">\n                  <textarea\n                    v-model=\"comment.editedContent\"\n                    class=\"comment-edit-textarea\"\n                    rows=\"3\"\n                    placeholder=\"Modifier votre commentaire...\"\n                    @keydown.ctrl.enter=\"saveCommentEdit(comment)\"\n                    @keydown.esc=\"cancelCommentEdit(comment)\"\n                  ></textarea>\n                  <div class=\"comment-edit-actions\">\n                    <button @click=\"saveCommentEdit(comment)\" class=\"btn btn-primary btn-sm\">\n                      <i class=\"fas fa-save\"></i>\n                      Sauvegarder\n                    </button>\n                    <button @click=\"cancelCommentEdit(comment)\" class=\"btn btn-secondary btn-sm\">\n                      <i class=\"fas fa-times\"></i>\n                      Annuler\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"modal-footer\">\n        <div class=\"footer-actions\">\n          <button @click=\"deleteTask\" class=\"btn btn-danger\">\n            <i class=\"fas fa-trash\"></i>\n            Supprimer la tâche\n          </button>\n          <div class=\"footer-info\">\n            <span class=\"task-id\">ID de la carte: {{ task ? task.id : '' }}</span>\n            <span class=\"category-info\">Colonne: {{ categoryName }}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport postService from '../services/postService.js';\nimport commentService from '../services/commentService.js';\nimport Swal from 'sweetalert2';\n\nexport default {\n  name: 'CardDetailsSafe',\n  props: {\n    isVisible: {\n      type: Boolean,\n      default: false,\n    },\n    task: {\n      type: Object,\n      required: false,\n      default: null,\n    },\n    categoryName: {\n      type: String,\n      default: 'Catégorie inconnue',\n    },\n  },\n\n  data() {\n    return {\n      // Editing states\n      editingTitle: false,\n      editingDescription: false,\n\n      // Edited content\n      editedTitle: '',\n      editedDescription: '',\n\n      // Status\n      currentStatus: 'todo',\n\n      // Comments\n      comments: [],\n      newComment: '',\n      loadingComments: false,\n    };\n  },\n\n  computed: {\n    statusIcon() {\n      const icons = {\n        todo: 'fas fa-inbox',\n        'in-progress': 'fas fa-clock',\n        completed: 'fas fa-check-circle',\n      };\n      return icons[this.currentStatus] || 'fas fa-inbox';\n    },\n  },\n\n  watch: {\n    isVisible: {\n      immediate: true,\n      handler(newValue) {\n        if (newValue && this.task) {\n          this.initializeCard();\n        }\n      },\n    },\n\n    task: {\n      immediate: true,\n      handler(newTask) {\n        if (newTask && this.isVisible) {\n          this.initializeCard();\n        }\n      },\n    },\n  },\n\n  methods: {\n    initializeCard() {\n      if (!this.task) return;\n      // Initialize editing fields\n      this.editedTitle = this.task.title?.rendered || '';\n      this.editedDescription = (this.task.content?.rendered || '').replace(/<[^>]*>/g, '');\n\n      // Initialize status\n      this.currentStatus = this.getTaskStatus(this.task);\n\n      // Load comments\n      this.loadComments();\n    },\n\n    getTaskStatus(post) {\n      if (post.meta && post.meta.task_status) {\n        return post.meta.task_status;\n      }\n      if (post.status === 'draft') return 'todo';\n      if (post.status === 'pending') return 'in-progress';\n      if (post.status === 'publish') return 'completed';\n      return 'todo';\n    },\n\n    // Title editing\n    startEditingTitle() {\n      this.editingTitle = true;\n      this.$nextTick(() => {\n        this.$refs.titleInput.focus();\n        this.$refs.titleInput.select();\n      });\n    },\n\n    async saveTitle() {\n      if (!this.task) return;\n      if (this.editedTitle.trim() && this.editedTitle !== this.task.title.rendered) {\n        try {\n          await postService.update(this.task.id, {\n            title: this.editedTitle.trim(),\n          });\n          this.$emit('task-updated', {\n            ...this.task,\n            title: { rendered: this.editedTitle.trim() },\n          });\n        } catch (error) {\n          console.error('Erreur lors de la mise à jour du titre:', error);\n          Swal.fire('Erreur', 'Impossible de mettre à jour le titre', 'error');\n        }\n      }\n      this.editingTitle = false;\n    },\n\n    cancelTitleEdit() {\n      this.editedTitle = this.task && this.task.title ? this.task.title.rendered : '';\n      this.editingTitle = false;\n    },\n\n    // Description editing\n    startEditingDescription() {\n      this.editingDescription = true;\n      this.$nextTick(() => {\n        this.$refs.descriptionTextarea.focus();\n      });\n    },\n\n    async saveDescription() {\n      if (!this.task) return;\n      try {\n        const updatedPost = await postService.update(this.task.id, {\n          content: this.editedDescription.trim(),\n        });\n        this.$emit('task-updated', updatedPost.data);\n      } catch (error) {\n        console.error('Erreur lors de la mise à jour de la description:', error);\n  Swal.fire('Erreur', 'Impossible de mettre à jour la description', 'error');\n      }\n      this.editingDescription = false;\n    },\n\n    cancelDescriptionEdit() {\n      this.editedDescription =\n        this.task && this.task.content && this.task.content.rendered\n          ? this.task.content.rendered.replace(/<[^>]*>/g, '')\n          : '';\n      this.editingDescription = false;\n    },\n\n    // Status management\n    async updateStatus() {\n      if (!this.task) return;\n      try {\n        await postService.update(this.task.id, {\n          meta: {\n            task_status: this.currentStatus,\n          },\n        });\n        this.$emit('status-changed', this.currentStatus);\n      } catch (error) {\n        console.error('Erreur lors de la mise à jour du statut:', error);\n  Swal.fire('Erreur', 'Impossible de mettre à jour le statut', 'error');\n      }\n    },\n\n    // Comments management\n    async loadComments() {\n      if (!this.task) return;\n      this.loadingComments = true;\n      try {\n        const response = await commentService.getAll(this.task.id);\n        this.comments = response.success ? response.data : [];\n      } catch (error) {\n        console.error('Erreur lors du chargement des commentaires:', error);\n      } finally {\n        this.loadingComments = false;\n      }\n    },\n\n    async addComment() {\n      if (!this.newComment.trim() || !this.task) return;\n      try {\n        const response = await commentService.create({\n          post: this.task.id,\n          content: this.newComment.trim(),\n        });\n        if (response.success) {\n          this.comments.push(response.data);\n          this.newComment = '';\n        } else {\n          throw new Error(response.error?.message || \"Impossible d'ajouter le commentaire\");\n        }\n      } catch (error) {\n        console.error(\"Erreur lors de l'ajout du commentaire:\", error);\n        Swal.fire('Erreur', \"Impossible d'ajouter le commentaire\", 'error');\n      }\n    },\n\n    async deleteComment(commentId) {\n      const result = await Swal.fire({\n        title: 'Supprimer ce commentaire?',\n        text: 'Cette action ne peut pas être annulée',\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#d33',\n        cancelButtonColor: '#3085d6',\n        confirmButtonText: 'Supprimer',\n        cancelButtonText: 'Annuler',\n      });\n      if (result.isConfirmed) {\n        try {\n          const response = await commentService.delete(commentId);\n          if (response.success) {\n            this.comments = this.comments.filter(c => c.id !== commentId);\n          } else {\n            throw new Error(response.error?.message || 'Impossible de supprimer le commentaire');\n          }\n        } catch (error) {\n          console.error('Erreur lors de la suppression du commentaire:', error);\n          Swal.fire('Erreur', 'Impossible de supprimer le commentaire', 'error');\n        }\n      }\n    },\n\n    startEditingComment(comment) {\n      // Sauvegarder le contenu original et activer le mode édition\n      comment.editedContent = comment.content.rendered.replace(/<[^>]*>/g, ''); // Retirer les balises HTML pour l'édition\n      comment.isEditing = true;\n      \n      // Forcer la réactivité pour Vue 3\n      this.$forceUpdate();\n    },\n\n    async saveCommentEdit(comment) {\n      if (!comment.editedContent.trim()) {\n        Swal.fire('Erreur', 'Le commentaire ne peut pas être vide', 'warning');\n        return;\n      }\n\n      try {\n        \n        \n        const response = await commentService.update(comment.id, {\n          content: comment.editedContent\n        });\n\n        if (response.success) {\n          // Mettre à jour le commentaire local\n          comment.content.rendered = response.data.content.rendered;\n          comment.isEditing = false;\n          delete comment.editedContent;\n          \n          // Forcer la réactivité pour Vue 3\n          this.$forceUpdate();\n          \n          Swal.fire({\n            title: 'Modifié !',\n            text: 'Commentaire mis à jour avec succès',\n            icon: 'success',\n            timer: 2000,\n            showConfirmButton: false\n          });\n        } else {\n          throw new Error(response.error?.message || 'Impossible de modifier le commentaire');\n        }\n      } catch (error) {\n        console.error('Erreur lors de la modification du commentaire:', error);\n        Swal.fire('Erreur', 'Impossible de modifier le commentaire', 'error');\n      }\n    },\n\n    cancelCommentEdit(comment) {\n      // Annuler l'édition et restaurer l'état original\n      comment.isEditing = false;\n      delete comment.editedContent;\n      \n      // Forcer la réactivité pour Vue 3\n      this.$forceUpdate();\n    },\n\n    // Task management\n    async deleteTask() {\n  const result = await Swal.fire({\n        title: 'Supprimer cette tâche?',\n        text: 'Cette action supprimera la tâche et tous ses commentaires de façon permanente',\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#d33',\n        cancelButtonColor: '#3085d6',\n        confirmButtonText: 'Supprimer définitivement',\n        cancelButtonText: 'Annuler',\n      });\n      if (result.isConfirmed) {\n        try {\n          const response = await postService.delete(this.task.id);\n          if (response.success) {\n            this.$emit('task-deleted', this.task.id);\n            this.closeModal();\n          } else {\n            throw new Error(response.error?.message || 'Impossible de supprimer la tâche');\n          }\n        } catch (error) {\n          console.error('Erreur lors de la suppression de la tâche:', error);\n          Swal.fire('Erreur', 'Impossible de supprimer la tâche', 'error');\n        }\n      }\n    },\n\n    // Modal management\n    closeModal() {\n      this.$emit('closeModal');\n    },\n\n    // Utilities\n    formatDate(dateString) {\n      const date = new Date(dateString);\n      return date.toLocaleDateString('fr-FR', {\n        day: 'numeric',\n        month: 'long',\n        year: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit',\n      });\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.7);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n  padding: 20px;\n}\n\n.modal-container {\n  background: white;\n  border-radius: 20px;\n  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);\n  max-width: 800px;\n  width: 100%;\n  max-height: 90vh;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  animation: modalAppear 0.3s ease-out;\n}\n\n@keyframes modalAppear {\n  from {\n    transform: scale(0.8);\n    opacity: 0;\n  }\n  to {\n    transform: scale(1);\n    opacity: 1;\n  }\n}\n\n.modal-header {\n  padding: 30px;\n  border-bottom: 1px solid #eee;\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n\n  .card-title-section {\n    flex: 1;\n    display: flex;\n    gap: 15px;\n\n    .card-status-indicator {\n      width: 50px;\n      height: 50px;\n      border-radius: 50%;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      font-size: 20px;\n      color: white;\n      flex-shrink: 0;\n\n      &.todo {\n        background: #3498db;\n      }\n\n      &.in-progress {\n        background: #f39c12;\n      }\n\n      &.completed {\n        background: #27ae60;\n      }\n    }\n\n    .title-content {\n      flex: 1;\n\n      .card-title {\n        font-size: 24px;\n        font-weight: 600;\n        color: #2c3e50;\n        margin: 0 0 10px 0;\n        cursor: pointer;\n        padding: 5px;\n        border-radius: 5px;\n        transition: background-color 0.3s ease;\n\n        &:hover {\n          background-color: #f8f9fa;\n        }\n      }\n\n      .title-input {\n        font-size: 24px;\n        font-weight: 600;\n        color: #2c3e50;\n        border: 2px solid #667eea;\n        border-radius: 5px;\n        padding: 5px 10px;\n        width: 100%;\n        margin: 0 0 10px 0;\n\n        &:focus {\n          outline: none;\n          border-color: #5a6fd8;\n        }\n      }\n\n      .card-meta {\n        display: flex;\n        flex-wrap: wrap;\n        gap: 15px;\n        color: #7f8c8d;\n        font-size: 14px;\n\n        span {\n          display: flex;\n          align-items: center;\n          gap: 5px;\n\n          i {\n            font-size: 12px;\n          }\n        }\n\n        .card-category {\n          color: #667eea;\n          font-weight: 500;\n        }\n      }\n    }\n  }\n\n  .header-actions {\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n    align-items: flex-end;\n\n    .status-selector {\n      display: flex;\n      align-items: center;\n      gap: 10px;\n\n      label {\n        font-weight: 500;\n        color: #2c3e50;\n      }\n\n      select {\n        padding: 8px 12px;\n        border: 1px solid #ddd;\n        border-radius: 8px;\n        background: white;\n        cursor: pointer;\n\n        &:focus {\n          outline: none;\n          border-color: #667eea;\n        }\n      }\n    }\n\n    .btn-close {\n      background: none;\n      border: none;\n      font-size: 24px;\n      color: #95a5a6;\n      cursor: pointer;\n      padding: 5px;\n      border-radius: 50%;\n      transition: all 0.3s ease;\n\n      &:hover {\n        color: #e74c3c;\n        background: rgba(231, 76, 60, 0.1);\n      }\n    }\n  }\n}\n\n.modal-body {\n  flex: 1;\n  overflow-y: auto;\n  padding: 0 30px;\n\n  .section {\n    margin-bottom: 30px;\n\n    .section-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      margin-bottom: 15px;\n\n      h3 {\n        font-size: 18px;\n        font-weight: 600;\n        color: #2c3e50;\n        margin: 0;\n        display: flex;\n        align-items: center;\n        gap: 10px;\n\n        i {\n          color: #667eea;\n        }\n      }\n\n      .btn-edit-section {\n        background: none;\n        border: 1px solid #ddd;\n        padding: 8px 15px;\n        border-radius: 8px;\n        cursor: pointer;\n        color: #667eea;\n        font-size: 14px;\n        transition: all 0.3s ease;\n\n        &:hover {\n          background: #667eea;\n          color: white;\n        }\n      }\n    }\n  }\n\n  .description-section {\n    .description-content {\n      .description-text {\n        background: #ffffff;\n        padding: 20px;\n        border-radius: 8px;\n        border: 1px solid #e3e6f0;\n        border-left: 4px solid #667eea;\n        line-height: 1.8;\n        font-size: 14px;\n        color: #2c3e50;\n        box-shadow: 0 2px 4px rgba(0,0,0,0.05);\n\n        ::v-deep {\n          p {\n            margin: 0 0 12px 0;\n            color: #2c3e50;\n\n            &:last-child {\n              margin: 0;\n            }\n          }\n          \n          h1, h2, h3, h4, h5, h6 {\n            color: #2c3e50;\n            margin: 16px 0 8px 0;\n          }\n          \n          ul, ol {\n            margin: 12px 0;\n            padding-left: 20px;\n          }\n          \n          li {\n            margin: 4px 0;\n            color: #2c3e50;\n          }\n        }\n      }\n\n      .no-description {\n        color: #95a5a6;\n        font-style: italic;\n        cursor: pointer;\n        padding: 15px;\n        text-align: center;\n        background: #f8f9fa;\n        border: 2px dashed #ddd;\n        border-radius: 8px;\n        transition: all 0.3s ease;\n\n        &:hover {\n          background: #ecf0f1;\n          border-color: #667eea;\n        }\n\n        i {\n          margin-right: 8px;\n        }\n      }\n    }\n\n    .description-editor {\n      .description-textarea {\n        width: 100%;\n        border: 2px solid #ddd;\n        border-radius: 8px;\n        padding: 15px;\n        font-family: inherit;\n        font-size: 14px;\n        line-height: 1.6;\n        resize: vertical;\n        min-height: 100px;\n\n        &:focus {\n          outline: none;\n          border-color: #667eea;\n        }\n      }\n\n      .editor-actions {\n        display: flex;\n        gap: 10px;\n        margin-top: 10px;\n      }\n    }\n  }\n\n  .comments-section {\n    .add-comment-form {\n      margin-bottom: 20px;\n\n      .comment-textarea {\n        width: 100%;\n        border: 2px solid #ddd;\n        border-radius: 8px;\n        padding: 15px;\n        font-family: inherit;\n        font-size: 14px;\n        line-height: 1.6;\n        resize: vertical;\n\n        &:focus {\n          outline: none;\n          border-color: #667eea;\n        }\n      }\n\n      .comment-actions {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        margin-top: 10px;\n\n        .shortcut-hint {\n          color: #95a5a6;\n          font-size: 12px;\n        }\n      }\n    }\n\n    .comments-list {\n      .loading-comments,\n      .no-comments {\n        text-align: center;\n        padding: 30px;\n        color: #95a5a6;\n\n        i {\n          font-size: 24px;\n          margin-bottom: 10px;\n          display: block;\n        }\n      }\n\n      .comment-item {\n        background: #f8f9fa;\n        border-radius: 8px;\n        padding: 15px;\n        margin-bottom: 15px;\n        border-left: 4px solid #667eea;\n\n        .comment-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          margin-bottom: 10px;\n\n          .comment-author {\n            display: flex;\n            align-items: center;\n            gap: 8px;\n            font-weight: 500;\n            color: #2c3e50;\n\n            i {\n              color: #667eea;\n              font-size: 16px;\n            }\n          }\n\n          .comment-date {\n            color: #7f8c8d;\n            font-size: 12px;\n          }\n\n          .comment-actions {\n            display: flex;\n            gap: 5px;\n            align-items: center;\n          }\n\n          .btn-edit-comment, .btn-delete-comment {\n            background: none;\n            border: none;\n            cursor: pointer;\n            padding: 6px 8px;\n            border-radius: 4px;\n            transition: all 0.3s ease;\n            font-size: 12px;\n          }\n\n          .btn-edit-comment {\n            color: #667eea;\n            \n            &:hover {\n              background: rgba(102, 126, 234, 0.1);\n              color: #5a6fd8;\n            }\n          }\n\n          .btn-delete-comment {\n            color: #e74c3c;\n            \n            &:hover {\n              background: rgba(231, 76, 60, 0.1);\n              color: #c0392b;\n            }\n          }\n        }\n\n        .comment-content {\n          background: #ffffff;\n          padding: 15px;\n          border-radius: 6px;\n          border: 1px solid #e8ecf4;\n          margin-top: 8px;\n          line-height: 1.7;\n          font-size: 14px;\n          color: #2c3e50;\n          box-shadow: 0 1px 3px rgba(0,0,0,0.05);\n\n          ::v-deep {\n            p {\n              margin: 0 0 10px 0;\n              color: #2c3e50;\n\n              &:last-child {\n                margin: 0;\n              }\n            }\n            \n            h1, h2, h3, h4, h5, h6 {\n              color: #2c3e50;\n              margin: 12px 0 6px 0;\n            }\n            \n            ul, ol {\n              margin: 10px 0;\n              padding-left: 18px;\n            }\n            \n            li {\n              margin: 3px 0;\n              color: #2c3e50;\n            }\n          }\n        }\n\n        .comment-edit-form {\n          margin-top: 8px;\n\n          .comment-edit-textarea {\n            width: 100%;\n            padding: 12px;\n            border: 1px solid #ddd;\n            border-radius: 6px;\n            font-size: 14px;\n            line-height: 1.5;\n            resize: vertical;\n            font-family: inherit;\n            color: #2c3e50;\n\n            &:focus {\n              outline: none;\n              border-color: #667eea;\n              box-shadow: 0 0 0 2px rgba(102, 126, 234, 0.1);\n            }\n          }\n\n          .comment-edit-actions {\n            display: flex;\n            gap: 8px;\n            margin-top: 10px;\n            justify-content: flex-end;\n\n            .btn {\n              font-size: 12px;\n              padding: 6px 12px;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\n.modal-footer {\n  padding: 20px 30px;\n  border-top: 1px solid #eee;\n  background: #f8f9fa;\n\n  .footer-actions {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    .footer-info {\n      display: flex;\n      flex-direction: column;\n      gap: 4px;\n      \n      .task-id, .category-info {\n        color: #95a5a6;\n        font-size: 12px;\n      }\n      \n      .category-info {\n        color: #3498db;\n        font-weight: 500;\n      }\n    }\n  }\n}\n\n// Buttons\n.btn {\n  border: none;\n  padding: 10px 20px;\n  border-radius: 8px;\n  cursor: pointer;\n  font-size: 14px;\n  font-weight: 500;\n  transition: all 0.3s ease;\n  display: inline-flex;\n  align-items: center;\n  gap: 8px;\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n\n  &.btn-primary {\n    background: #667eea;\n    color: white;\n\n    &:hover:not(:disabled) {\n      background: #5a6fd8;\n      transform: translateY(-2px);\n    }\n  }\n\n  &.btn-secondary {\n    background: #95a5a6;\n    color: white;\n\n    &:hover:not(:disabled) {\n      background: #7f8c8d;\n    }\n  }\n\n  &.btn-danger {\n    background: #e74c3c;\n    color: white;\n\n    &:hover:not(:disabled) {\n      background: #c0392b;\n      transform: translateY(-2px);\n    }\n  }\n}\n\n// Comment count badge\n.comment-count {\n  background: #667eea;\n  color: white;\n  padding: 2px 8px;\n  border-radius: 10px;\n  font-size: 12px;\n  font-weight: 500;\n}\n\n// Responsive\n@media (max-width: 768px) {\n  .modal-overlay {\n    padding: 10px;\n  }\n\n  .modal-container {\n    max-height: 95vh;\n  }\n\n  .modal-header {\n    padding: 20px;\n    flex-direction: column;\n    gap: 20px;\n\n    .card-title-section {\n      width: 100%;\n    }\n\n    .header-actions {\n      width: 100%;\n      flex-direction: row;\n      justify-content: space-between;\n    }\n  }\n\n  .modal-body {\n    padding: 0 20px;\n  }\n\n  .modal-footer {\n    padding: 15px 20px;\n\n    .footer-actions {\n      flex-direction: column;\n      gap: 10px;\n    }\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}