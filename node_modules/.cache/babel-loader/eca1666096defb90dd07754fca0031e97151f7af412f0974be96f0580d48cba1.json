{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'ToastNotification',\n  data() {\n    return {\n      toasts: [],\n      nextId: 1\n    };\n  },\n  methods: {\n    show({\n      type = 'info',\n      title = null,\n      message,\n      duration = 5000\n    }) {\n      const toast = {\n        id: this.nextId++,\n        type,\n        title,\n        message,\n        duration\n      };\n      this.toasts.push(toast);\n\n      // Auto-remove after duration\n      setTimeout(() => {\n        this.removeToast(toast.id);\n      }, duration);\n      return toast.id;\n    },\n    removeToast(id) {\n      const index = this.toasts.findIndex(t => t.id === id);\n      if (index > -1) {\n        this.toasts.splice(index, 1);\n      }\n    },\n    getToastIcon(type) {\n      const icons = {\n        success: 'fas fa-check-circle',\n        error: 'fas fa-exclamation-triangle',\n        warning: 'fas fa-exclamation-circle',\n        info: 'fas fa-info-circle',\n        loading: 'fas fa-spinner fa-spin'\n      };\n      return icons[type] || icons.info;\n    },\n    // API methods for easy usage\n    success(message, title = null, duration = 4000) {\n      return this.show({\n        type: 'success',\n        title,\n        message,\n        duration\n      });\n    },\n    error(message, title = 'Erreur', duration = 6000) {\n      return this.show({\n        type: 'error',\n        title,\n        message,\n        duration\n      });\n    },\n    warning(message, title = 'Attention', duration = 5000) {\n      return this.show({\n        type: 'warning',\n        title,\n        message,\n        duration\n      });\n    },\n    info(message, title = null, duration = 4000) {\n      return this.show({\n        type: 'info',\n        title,\n        message,\n        duration\n      });\n    },\n    loading(message, title = 'Chargement...', duration = 10000) {\n      return this.show({\n        type: 'loading',\n        title,\n        message,\n        duration\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","toasts","nextId","methods","show","type","title","message","duration","toast","id","push","setTimeout","removeToast","index","findIndex","t","splice","getToastIcon","icons","success","error","warning","info","loading"],"sources":["/Users/akoyessoucristal/Rendu/C-DEV-121-COT-1-1-twp-cristal.akoyessou/src/components/ToastNotification.vue"],"sourcesContent":["<template>\n  <div class=\"toast-container\">\n    <transition-group name=\"toast\" tag=\"div\">\n      <div\n        v-for=\"toast in toasts\"\n        :key=\"toast.id\"\n        :class=\"['toast', `toast-${toast.type}`]\"\n        @click=\"removeToast(toast.id)\"\n      >\n        <div class=\"toast-icon\">\n          <i :class=\"getToastIcon(toast.type)\"></i>\n        </div>\n        <div class=\"toast-content\">\n          <h4 v-if=\"toast.title\" class=\"toast-title\">{{ toast.title }}</h4>\n          <p class=\"toast-message\">{{ toast.message }}</p>\n        </div>\n        <button class=\"toast-close\" @click.stop=\"removeToast(toast.id)\">\n          <i class=\"fas fa-times\"></i>\n        </button>\n        <div class=\"toast-progress\" :style=\"{ animationDuration: `${toast.duration}ms` }\"></div>\n      </div>\n    </transition-group>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ToastNotification',\n\n  data() {\n    return {\n      toasts: [],\n      nextId: 1,\n    };\n  },\n\n  methods: {\n    show({ type = 'info', title = null, message, duration = 5000 }) {\n      const toast = {\n        id: this.nextId++,\n        type,\n        title,\n        message,\n        duration,\n      };\n\n      this.toasts.push(toast);\n\n      // Auto-remove after duration\n      setTimeout(() => {\n        this.removeToast(toast.id);\n      }, duration);\n\n      return toast.id;\n    },\n\n    removeToast(id) {\n      const index = this.toasts.findIndex(t => t.id === id);\n      if (index > -1) {\n        this.toasts.splice(index, 1);\n      }\n    },\n\n    getToastIcon(type) {\n      const icons = {\n        success: 'fas fa-check-circle',\n        error: 'fas fa-exclamation-triangle',\n        warning: 'fas fa-exclamation-circle',\n        info: 'fas fa-info-circle',\n        loading: 'fas fa-spinner fa-spin',\n      };\n      return icons[type] || icons.info;\n    },\n\n    // API methods for easy usage\n    success(message, title = null, duration = 4000) {\n      return this.show({ type: 'success', title, message, duration });\n    },\n\n    error(message, title = 'Erreur', duration = 6000) {\n      return this.show({ type: 'error', title, message, duration });\n    },\n\n    warning(message, title = 'Attention', duration = 5000) {\n      return this.show({ type: 'warning', title, message, duration });\n    },\n\n    info(message, title = null, duration = 4000) {\n      return this.show({ type: 'info', title, message, duration });\n    },\n\n    loading(message, title = 'Chargement...', duration = 10000) {\n      return this.show({ type: 'loading', title, message, duration });\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.toast-container {\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  z-index: 9999;\n  pointer-events: none;\n  max-width: 400px;\n  width: 100%;\n}\n\n.toast {\n  position: relative;\n  background: white;\n  border-radius: 12px;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);\n  margin-bottom: 15px;\n  padding: 16px;\n  display: flex;\n  align-items: flex-start;\n  gap: 12px;\n  cursor: pointer;\n  pointer-events: auto;\n  overflow: hidden;\n  min-height: 70px;\n  transition: all 0.3s ease;\n  border-left: 4px solid transparent;\n\n  &:hover {\n    transform: translateX(-5px);\n    box-shadow: 0 15px 40px rgba(0, 0, 0, 0.2);\n  }\n\n  &.toast-success {\n    border-left-color: #27ae60;\n\n    .toast-icon {\n      color: #27ae60;\n    }\n  }\n\n  &.toast-error {\n    border-left-color: #e74c3c;\n\n    .toast-icon {\n      color: #e74c3c;\n    }\n  }\n\n  &.toast-warning {\n    border-left-color: #f39c12;\n\n    .toast-icon {\n      color: #f39c12;\n    }\n  }\n\n  &.toast-info {\n    border-left-color: #3498db;\n\n    .toast-icon {\n      color: #3498db;\n    }\n  }\n\n  &.toast-loading {\n    border-left-color: #667eea;\n\n    .toast-icon {\n      color: #667eea;\n    }\n  }\n\n  .toast-icon {\n    font-size: 20px;\n    margin-top: 2px;\n    flex-shrink: 0;\n  }\n\n  .toast-content {\n    flex: 1;\n    min-width: 0;\n\n    .toast-title {\n      font-size: 14px;\n      font-weight: 600;\n      color: #2c3e50;\n      margin: 0 0 4px 0;\n      line-height: 1.3;\n    }\n\n    .toast-message {\n      font-size: 13px;\n      color: #7f8c8d;\n      margin: 0;\n      line-height: 1.4;\n      word-wrap: break-word;\n    }\n  }\n\n  .toast-close {\n    background: none;\n    border: none;\n    color: #95a5a6;\n    cursor: pointer;\n    padding: 4px;\n    border-radius: 4px;\n    font-size: 14px;\n    flex-shrink: 0;\n    transition: all 0.3s ease;\n\n    &:hover {\n      background: rgba(149, 165, 166, 0.1);\n      color: #7f8c8d;\n    }\n  }\n\n  .toast-progress {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    height: 3px;\n    background: currentColor;\n    opacity: 0.3;\n    animation: progressBar linear forwards;\n    transform-origin: left;\n  }\n}\n\n@keyframes progressBar {\n  from {\n    transform: scaleX(1);\n  }\n  to {\n    transform: scaleX(0);\n  }\n}\n\n// Toast animations\n.toast-enter-active {\n  transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n}\n\n.toast-leave-active {\n  transition: all 0.3s ease-in;\n}\n\n.toast-enter-from {\n  transform: translateX(100%);\n  opacity: 0;\n}\n\n.toast-leave-to {\n  transform: translateX(100%);\n  opacity: 0;\n}\n\n.toast-move {\n  transition: transform 0.3s ease;\n}\n\n// Responsive\n@media (max-width: 768px) {\n  .toast-container {\n    top: 10px;\n    right: 10px;\n    left: 10px;\n    max-width: none;\n  }\n\n  .toast {\n    margin-bottom: 10px;\n    padding: 14px;\n\n    .toast-icon {\n      font-size: 18px;\n    }\n\n    .toast-content {\n      .toast-title {\n        font-size: 13px;\n      }\n\n      .toast-message {\n        font-size: 12px;\n      }\n    }\n  }\n}\n</style>\n"],"mappings":";AA0BA,eAAe;EACbA,IAAI,EAAE,mBAAmB;EAEzBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,EAAE;MACVC,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EAEDC,OAAO,EAAE;IACPC,IAAIA,CAAC;MAAEC,IAAG,GAAI,MAAM;MAAEC,KAAI,GAAI,IAAI;MAAEC,OAAO;MAAEC,QAAO,GAAI;IAAK,CAAC,EAAE;MAC9D,MAAMC,KAAI,GAAI;QACZC,EAAE,EAAE,IAAI,CAACR,MAAM,EAAE;QACjBG,IAAI;QACJC,KAAK;QACLC,OAAO;QACPC;MACF,CAAC;MAED,IAAI,CAACP,MAAM,CAACU,IAAI,CAACF,KAAK,CAAC;;MAEvB;MACAG,UAAU,CAAC,MAAM;QACf,IAAI,CAACC,WAAW,CAACJ,KAAK,CAACC,EAAE,CAAC;MAC5B,CAAC,EAAEF,QAAQ,CAAC;MAEZ,OAAOC,KAAK,CAACC,EAAE;IACjB,CAAC;IAEDG,WAAWA,CAACH,EAAE,EAAE;MACd,MAAMI,KAAI,GAAI,IAAI,CAACb,MAAM,CAACc,SAAS,CAACC,CAAA,IAAKA,CAAC,CAACN,EAAC,KAAMA,EAAE,CAAC;MACrD,IAAII,KAAI,GAAI,CAAC,CAAC,EAAE;QACd,IAAI,CAACb,MAAM,CAACgB,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC;MAC9B;IACF,CAAC;IAEDI,YAAYA,CAACb,IAAI,EAAE;MACjB,MAAMc,KAAI,GAAI;QACZC,OAAO,EAAE,qBAAqB;QAC9BC,KAAK,EAAE,6BAA6B;QACpCC,OAAO,EAAE,2BAA2B;QACpCC,IAAI,EAAE,oBAAoB;QAC1BC,OAAO,EAAE;MACX,CAAC;MACD,OAAOL,KAAK,CAACd,IAAI,KAAKc,KAAK,CAACI,IAAI;IAClC,CAAC;IAED;IACAH,OAAOA,CAACb,OAAO,EAAED,KAAI,GAAI,IAAI,EAAEE,QAAO,GAAI,IAAI,EAAE;MAC9C,OAAO,IAAI,CAACJ,IAAI,CAAC;QAAEC,IAAI,EAAE,SAAS;QAAEC,KAAK;QAAEC,OAAO;QAAEC;MAAS,CAAC,CAAC;IACjE,CAAC;IAEDa,KAAKA,CAACd,OAAO,EAAED,KAAI,GAAI,QAAQ,EAAEE,QAAO,GAAI,IAAI,EAAE;MAChD,OAAO,IAAI,CAACJ,IAAI,CAAC;QAAEC,IAAI,EAAE,OAAO;QAAEC,KAAK;QAAEC,OAAO;QAAEC;MAAS,CAAC,CAAC;IAC/D,CAAC;IAEDc,OAAOA,CAACf,OAAO,EAAED,KAAI,GAAI,WAAW,EAAEE,QAAO,GAAI,IAAI,EAAE;MACrD,OAAO,IAAI,CAACJ,IAAI,CAAC;QAAEC,IAAI,EAAE,SAAS;QAAEC,KAAK;QAAEC,OAAO;QAAEC;MAAS,CAAC,CAAC;IACjE,CAAC;IAEDe,IAAIA,CAAChB,OAAO,EAAED,KAAI,GAAI,IAAI,EAAEE,QAAO,GAAI,IAAI,EAAE;MAC3C,OAAO,IAAI,CAACJ,IAAI,CAAC;QAAEC,IAAI,EAAE,MAAM;QAAEC,KAAK;QAAEC,OAAO;QAAEC;MAAS,CAAC,CAAC;IAC9D,CAAC;IAEDgB,OAAOA,CAACjB,OAAO,EAAED,KAAI,GAAI,eAAe,EAAEE,QAAO,GAAI,KAAK,EAAE;MAC1D,OAAO,IAAI,CAACJ,IAAI,CAAC;QAAEC,IAAI,EAAE,SAAS;QAAEC,KAAK;QAAEC,OAAO;QAAEC;MAAS,CAAC,CAAC;IACjE;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}