{"ast":null,"code":"import ToastNotification from '../components/ToastNotification.vue';\nimport LoadingSpinner from '../components/LoadingSpinner.vue';\nimport Swal from 'sweetalert2';\nexport default {\n  install(app) {\n    // Enregistrer les composants globalement\n    app.component('ToastNotification', ToastNotification);\n    app.component('LoadingSpinner', LoadingSpinner);\n\n    // Créer une instance de toast globale\n    let toastInstance = null;\n    function mountToast() {\n      if (!toastInstance) {\n        const container = document.createElement('div');\n        document.body.appendChild(container);\n        toastInstance = app._context.components.ToastNotification;\n      }\n    }\n    mountToast();\n    app.config.globalProperties.$toast = {\n      success: (message, title, duration) => {},\n      error: (message, title, duration) => {},\n      warning: (message, title, duration) => {},\n      info: (message, title, duration) => {},\n      loading: (message, title, duration) => {},\n      remove: id => {}\n    };\n\n    // Créer une instance de loading globale (stub)\n    app.config.globalProperties.$loading = {\n      show: (options = {}) => {},\n      hide: () => {},\n      setProgress: progress => {},\n      setMessage: message => {}\n    };\n\n    // Ajouter des méthodes utilitaires pour les confirmations améliorées\n    app.config.globalProperties.$confirm = {\n      delete: async (itemName = 'cet élément') => {\n        const result = await Swal.fire({\n          title: `Supprimer ${itemName} ?`,\n          html: `\n            <div style=\"text-align: center; padding: 20px;\">\n              <div style=\"font-size: 60px; color: #e74c3c; margin-bottom: 20px;\">\n                <i class=\"fas fa-trash-alt\"></i>\n              </div>\n              <p style=\"font-size: 16px; color: #7f8c8d; margin: 0;\">\n                Cette action est <strong>irréversible</strong>.<br>\n                Êtes-vous sûr de vouloir continuer ?\n              </p>\n            </div>\n          `,\n          showCancelButton: true,\n          confirmButtonColor: '#e74c3c',\n          cancelButtonColor: '#95a5a6',\n          confirmButtonText: '<i class=\"fas fa-trash\"></i> Supprimer définitivement',\n          cancelButtonText: '<i class=\"fas fa-times\"></i> Annuler',\n          reverseButtons: true,\n          focusCancel: true,\n          customClass: {\n            popup: 'swal-delete-popup',\n            confirmButton: 'swal-delete-confirm',\n            cancelButton: 'swal-delete-cancel'\n          }\n        });\n        return result.isConfirmed;\n      },\n      save: async (message = 'Voulez-vous sauvegarder vos modifications ?') => {\n        const result = await Swal.fire({\n          title: 'Sauvegarder les modifications',\n          html: `\n            <div style=\"text-align: center; padding: 20px;\">\n              <div style=\"font-size: 60px; color: #27ae60; margin-bottom: 20px;\">\n                <i class=\"fas fa-save\"></i>\n              </div>\n              <p style=\"font-size: 16px; color: #7f8c8d; margin: 0;\">\n                ${message}\n              </p>\n            </div>\n          `,\n          showCancelButton: true,\n          confirmButtonColor: '#27ae60',\n          cancelButtonColor: '#95a5a6',\n          confirmButtonText: '<i class=\"fas fa-save\"></i> Sauvegarder',\n          cancelButtonText: '<i class=\"fas fa-times\"></i> Annuler',\n          reverseButtons: true\n        });\n        return result.isConfirmed;\n      },\n      discard: async (message = 'Voulez-vous abandonner vos modifications ?') => {\n        const result = await Swal.fire({\n          title: 'Abandonner les modifications',\n          html: `\n            <div style=\"text-align: center; padding: 20px;\">\n              <div style=\"font-size: 60px; color: #f39c12; margin-bottom: 20px;\">\n                <i class=\"fas fa-exclamation-triangle\"></i>\n              </div>\n              <p style=\"font-size: 16px; color: #7f8c8d; margin: 0;\">\n                ${message}<br>\n                <strong>Toutes vos modifications seront perdues.</strong>\n              </p>\n            </div>\n          `,\n          showCancelButton: true,\n          confirmButtonColor: '#f39c12',\n          cancelButtonColor: '#95a5a6',\n          confirmButtonText: '<i class=\"fas fa-trash\"></i> Abandonner',\n          cancelButtonText: '<i class=\"fas fa-arrow-left\"></i> Continuer l\\'édition',\n          reverseButtons: true,\n          focusCancel: true\n        });\n        return result.isConfirmed;\n      }\n    };\n\n    // Intercepteur global pour les erreurs\n    app.config.globalProperties.$handleError = (error, context = 'Une erreur est survenue') => {\n      console.error(`Error in ${context}:`, error);\n      let message = \"Une erreur inattendue s'est produite.\";\n      let title = 'Erreur';\n      if (error.response) {\n        // Erreur de réponse HTTP\n        const status = error.response.status;\n        const data = error.response.data;\n        switch (status) {\n          case 400:\n            title = 'Requête invalide';\n            message = data.message || 'Les données envoyées sont incorrectes.';\n            break;\n          case 401:\n            title = 'Non autorisé';\n            message = 'Vous devez vous connecter pour accéder à cette ressource.';\n            break;\n          case 403:\n            title = 'Accès interdit';\n            message = \"Vous n'avez pas les permissions nécessaires.\";\n            break;\n          case 404:\n            title = 'Ressource introuvable';\n            message = \"L'élément demandé n'existe plus ou a été déplacé.\";\n            break;\n          case 500:\n            title = 'Erreur serveur';\n            message = 'Le serveur rencontre des difficultés. Réessayez plus tard.';\n            break;\n          default:\n            title = `Erreur ${status}`;\n            message = data.message || `Une erreur ${status} s'est produite.`;\n        }\n      } else if (error.request) {\n        // Erreur réseau\n        title = 'Problème de connexion';\n        message = 'Impossible de contacter le serveur. Vérifiez votre connexion internet.';\n      } else {\n        // Autre erreur\n        message = error.message || message;\n      }\n      app.config.globalProperties.$toast.error(message, title);\n    };\n\n    // Méthodes utilitaires pour l'UX\n    app.config.globalProperties.$ux = {\n      // Délai pour simuler un chargement fluide\n      delay: (ms = 500) => new Promise(resolve => setTimeout(resolve, ms)),\n      // Exécuter une action avec loading automatique\n      withLoading: async (asyncFn, options = {}) => {\n        app.config.globalProperties.$loading.show({\n          title: options.title || 'Chargement...',\n          message: options.message || 'Veuillez patienter',\n          type: options.type || 'ring'\n        });\n        try {\n          const result = await asyncFn();\n          await app.config.globalProperties.$ux.delay(options.minDelay || 300);\n          return result;\n        } finally {\n          app.config.globalProperties.$loading.hide();\n        }\n      },\n      // Feedback de succès avec délai\n      success: async (message, title = null) => {\n        app.config.globalProperties.$toast.success(message, title);\n        await app.config.globalProperties.$ux.delay(200);\n      }\n    };\n  }\n};","map":{"version":3,"names":["ToastNotification","LoadingSpinner","Swal","install","app","component","toastInstance","mountToast","container","document","createElement","body","appendChild","_context","components","config","globalProperties","$toast","success","message","title","duration","error","warning","info","loading","remove","id","$loading","show","options","hide","setProgress","progress","setMessage","$confirm","delete","itemName","result","fire","html","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","reverseButtons","focusCancel","customClass","popup","confirmButton","cancelButton","isConfirmed","save","discard","$handleError","context","console","response","status","data","request","$ux","delay","ms","Promise","resolve","setTimeout","withLoading","asyncFn","type","minDelay"],"sources":["/Users/akoyessoucristal/Rendu/C-DEV-121-COT-1-1-twp-cristal.akoyessou/src/plugins/notifications.js"],"sourcesContent":["import ToastNotification from '../components/ToastNotification.vue';\nimport LoadingSpinner from '../components/LoadingSpinner.vue';\nimport Swal from 'sweetalert2';\n\nexport default {\n  install(app) {\n    // Enregistrer les composants globalement\n    app.component('ToastNotification', ToastNotification);\n    app.component('LoadingSpinner', LoadingSpinner);\n\n    // Créer une instance de toast globale\n    let toastInstance = null;\n    function mountToast() {\n      if (!toastInstance) {\n        const container = document.createElement('div');\n        document.body.appendChild(container);\n        toastInstance = app._context.components.ToastNotification;\n      }\n    }\n    mountToast();\n\n    app.config.globalProperties.$toast = {\n      success: (message, title, duration) => {},\n      error: (message, title, duration) => {},\n      warning: (message, title, duration) => {},\n      info: (message, title, duration) => {},\n      loading: (message, title, duration) => {},\n      remove: id => {},\n    };\n\n    // Créer une instance de loading globale (stub)\n    app.config.globalProperties.$loading = {\n      show: (options = {}) => {},\n      hide: () => {},\n      setProgress: progress => {},\n      setMessage: message => {},\n    };\n\n    // Ajouter des méthodes utilitaires pour les confirmations améliorées\n    app.config.globalProperties.$confirm = {\n      delete: async (itemName = 'cet élément') => {\n  const result = await Swal.fire({\n          title: `Supprimer ${itemName} ?`,\n          html: `\n            <div style=\"text-align: center; padding: 20px;\">\n              <div style=\"font-size: 60px; color: #e74c3c; margin-bottom: 20px;\">\n                <i class=\"fas fa-trash-alt\"></i>\n              </div>\n              <p style=\"font-size: 16px; color: #7f8c8d; margin: 0;\">\n                Cette action est <strong>irréversible</strong>.<br>\n                Êtes-vous sûr de vouloir continuer ?\n              </p>\n            </div>\n          `,\n          showCancelButton: true,\n          confirmButtonColor: '#e74c3c',\n          cancelButtonColor: '#95a5a6',\n          confirmButtonText: '<i class=\"fas fa-trash\"></i> Supprimer définitivement',\n          cancelButtonText: '<i class=\"fas fa-times\"></i> Annuler',\n          reverseButtons: true,\n          focusCancel: true,\n          customClass: {\n            popup: 'swal-delete-popup',\n            confirmButton: 'swal-delete-confirm',\n            cancelButton: 'swal-delete-cancel',\n          },\n        });\n        return result.isConfirmed;\n      },\n\n      save: async (message = 'Voulez-vous sauvegarder vos modifications ?') => {\n  const result = await Swal.fire({\n          title: 'Sauvegarder les modifications',\n          html: `\n            <div style=\"text-align: center; padding: 20px;\">\n              <div style=\"font-size: 60px; color: #27ae60; margin-bottom: 20px;\">\n                <i class=\"fas fa-save\"></i>\n              </div>\n              <p style=\"font-size: 16px; color: #7f8c8d; margin: 0;\">\n                ${message}\n              </p>\n            </div>\n          `,\n          showCancelButton: true,\n          confirmButtonColor: '#27ae60',\n          cancelButtonColor: '#95a5a6',\n          confirmButtonText: '<i class=\"fas fa-save\"></i> Sauvegarder',\n          cancelButtonText: '<i class=\"fas fa-times\"></i> Annuler',\n          reverseButtons: true,\n        });\n        return result.isConfirmed;\n      },\n\n      discard: async (message = 'Voulez-vous abandonner vos modifications ?') => {\n  const result = await Swal.fire({\n          title: 'Abandonner les modifications',\n          html: `\n            <div style=\"text-align: center; padding: 20px;\">\n              <div style=\"font-size: 60px; color: #f39c12; margin-bottom: 20px;\">\n                <i class=\"fas fa-exclamation-triangle\"></i>\n              </div>\n              <p style=\"font-size: 16px; color: #7f8c8d; margin: 0;\">\n                ${message}<br>\n                <strong>Toutes vos modifications seront perdues.</strong>\n              </p>\n            </div>\n          `,\n          showCancelButton: true,\n          confirmButtonColor: '#f39c12',\n          cancelButtonColor: '#95a5a6',\n          confirmButtonText: '<i class=\"fas fa-trash\"></i> Abandonner',\n          cancelButtonText: '<i class=\"fas fa-arrow-left\"></i> Continuer l\\'édition',\n          reverseButtons: true,\n          focusCancel: true,\n        });\n        return result.isConfirmed;\n      },\n    };\n\n  // Intercepteur global pour les erreurs\n  app.config.globalProperties.$handleError = (error, context = 'Une erreur est survenue') => {\n      console.error(`Error in ${context}:`, error);\n\n      let message = \"Une erreur inattendue s'est produite.\";\n      let title = 'Erreur';\n\n      if (error.response) {\n        // Erreur de réponse HTTP\n        const status = error.response.status;\n        const data = error.response.data;\n\n        switch (status) {\n          case 400:\n            title = 'Requête invalide';\n            message = data.message || 'Les données envoyées sont incorrectes.';\n            break;\n          case 401:\n            title = 'Non autorisé';\n            message = 'Vous devez vous connecter pour accéder à cette ressource.';\n            break;\n          case 403:\n            title = 'Accès interdit';\n            message = \"Vous n'avez pas les permissions nécessaires.\";\n            break;\n          case 404:\n            title = 'Ressource introuvable';\n            message = \"L'élément demandé n'existe plus ou a été déplacé.\";\n            break;\n          case 500:\n            title = 'Erreur serveur';\n            message = 'Le serveur rencontre des difficultés. Réessayez plus tard.';\n            break;\n          default:\n            title = `Erreur ${status}`;\n            message = data.message || `Une erreur ${status} s'est produite.`;\n        }\n      } else if (error.request) {\n        // Erreur réseau\n        title = 'Problème de connexion';\n        message = 'Impossible de contacter le serveur. Vérifiez votre connexion internet.';\n      } else {\n        // Autre erreur\n        message = error.message || message;\n      }\n\n  app.config.globalProperties.$toast.error(message, title);\n    };\n\n  // Méthodes utilitaires pour l'UX\n  app.config.globalProperties.$ux = {\n      // Délai pour simuler un chargement fluide\n      delay: (ms = 500) => new Promise(resolve => setTimeout(resolve, ms)),\n\n      // Exécuter une action avec loading automatique\n      withLoading: async (asyncFn, options = {}) => {\n        app.config.globalProperties.$loading.show({\n          title: options.title || 'Chargement...',\n          message: options.message || 'Veuillez patienter',\n          type: options.type || 'ring',\n        });\n\n        try {\n          const result = await asyncFn();\n          await app.config.globalProperties.$ux.delay(options.minDelay || 300);\n          return result;\n        } finally {\n          app.config.globalProperties.$loading.hide();\n        }\n      },\n\n      // Feedback de succès avec délai\n      success: async (message, title = null) => {\n        app.config.globalProperties.$toast.success(message, title);\n        await app.config.globalProperties.$ux.delay(200);\n      },\n    };\n  },\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}