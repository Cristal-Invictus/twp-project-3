{"ast":null,"code":"import \"core-js/modules/web.dom-exception.stack.js\";\nimport axios from 'axios';\nconst BASE_URL = 'http://localhost:10003/wp-json/wp/v2';\nconst USERNAME = 'Cristal';\nconst PASSWORD = '54l4UuuGhBnG6GY3tIVqhUdU';\nconst AUTH = btoa(`${USERNAME}:${PASSWORD}`);\nconst client = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    Authorization: `Basic ${AUTH}`\n  }\n});\nfunction handleError(error) {\n  let message = 'Erreur inconnue';\n  let status = null;\n  let details = null;\n  if (error.response) {\n    status = error.response.status;\n    details = error.response.data;\n    switch (status) {\n      case 400:\n        message = 'Requête invalide';\n        break;\n      case 401:\n        message = 'Non autorisé';\n        break;\n      case 403:\n        message = 'Accès interdit';\n        break;\n      case 404:\n        message = 'Ressource non trouvée';\n        break;\n      case 500:\n        message = 'Erreur serveur WordPress';\n        break;\n      default:\n        message = `Erreur HTTP ${status}`;\n    }\n  } else if (error.request) {\n    message = \"WordPress inaccessible. Vérifiez votre connexion et l'URL WordPress.\";\n  } else {\n    message = error.message;\n  }\n  return {\n    message,\n    status,\n    details\n  };\n}\nexport default {\n  async getAll() {\n    try {\n      const response = await client.get('/posts?per_page=100');\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      console.error('Erreur getAll:', error);\n      return {\n        success: false,\n        error: handleError(error)\n      };\n    }\n  },\n  async create({\n    title,\n    content,\n    excerpt,\n    categories,\n    status,\n    meta\n  }) {\n    try {\n      const response = await client.post('/posts', {\n        title,\n        content,\n        excerpt,\n        categories,\n        status,\n        meta\n      });\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      console.error('Erreur create:', error);\n      return {\n        success: false,\n        error: handleError(error)\n      };\n    }\n  },\n  async update(id, {\n    title,\n    content,\n    excerpt,\n    categories,\n    status,\n    meta\n  }) {\n    try {\n      const response = await client.put(`/posts/${id}`, {\n        title,\n        content,\n        excerpt,\n        categories,\n        status,\n        meta\n      });\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      console.error('Erreur update:', error);\n      return {\n        success: false,\n        error: handleError(error)\n      };\n    }\n  },\n  async delete(id) {\n    try {\n      const response = await client.delete(`/posts/${id}`);\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      console.error('Erreur delete:', error);\n      return {\n        success: false,\n        error: handleError(error)\n      };\n    }\n  }\n};","map":{"version":3,"names":["axios","BASE_URL","USERNAME","PASSWORD","AUTH","btoa","client","create","baseURL","headers","Accept","Authorization","handleError","error","message","status","details","response","data","request","getAll","get","success","console","title","content","excerpt","categories","meta","post","update","id","put","delete"],"sources":["/Users/akoyessoucristal/Rendu/C-DEV-121-COT-1-1-twp-cristal.akoyessou/src/services/postService.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'http://localhost:10003/wp-json/wp/v2';\nconst USERNAME = 'Cristal';\nconst PASSWORD = '54l4UuuGhBnG6GY3tIVqhUdU';\nconst AUTH = btoa(`${USERNAME}:${PASSWORD}`);\n\nconst client = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    Authorization: `Basic ${AUTH}`,\n  },\n});\n\nfunction handleError(error) {\n  let message = 'Erreur inconnue';\n  let status = null;\n  let details = null;\n  if (error.response) {\n    status = error.response.status;\n    details = error.response.data;\n    switch (status) {\n      case 400:\n        message = 'Requête invalide'; break;\n      case 401:\n        message = 'Non autorisé'; break;\n      case 403:\n        message = 'Accès interdit'; break;\n      case 404:\n        message = 'Ressource non trouvée'; break;\n      case 500:\n        message = 'Erreur serveur WordPress'; break;\n      default:\n        message = `Erreur HTTP ${status}`;\n    }\n  } else if (error.request) {\n    message = \"WordPress inaccessible. Vérifiez votre connexion et l'URL WordPress.\";\n  } else {\n    message = error.message;\n  }\n  return { message, status, details };\n}\n\nexport default {\n  async getAll() {\n    try {\n      const response = await client.get('/posts?per_page=100');\n      return { success: true, data: response.data };\n    } catch (error) {\n      console.error('Erreur getAll:', error);\n      return { success: false, error: handleError(error) };\n    }\n  },\n  async create({ title, content, excerpt, categories, status, meta }) {\n    try {\n      const response = await client.post('/posts', { title, content, excerpt, categories, status, meta });\n      return { success: true, data: response.data };\n    } catch (error) {\n      console.error('Erreur create:', error);\n      return { success: false, error: handleError(error) };\n    }\n  },\n  async update(id, { title, content, excerpt, categories, status, meta }) {\n    try {\n      const response = await client.put(`/posts/${id}`, { title, content, excerpt, categories, status, meta });\n      return { success: true, data: response.data };\n    } catch (error) {\n      console.error('Erreur update:', error);\n      return { success: false, error: handleError(error) };\n    }\n  },\n  async delete(id) {\n    try {\n      const response = await client.delete(`/posts/${id}`);\n      return { success: true, data: response.data };\n    } catch (error) {\n      console.error('Erreur delete:', error);\n      return { success: false, error: handleError(error) };\n    }\n  },\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,sCAAsC;AACvD,MAAMC,QAAQ,GAAG,SAAS;AAC1B,MAAMC,QAAQ,GAAG,0BAA0B;AAC3C,MAAMC,IAAI,GAAGC,IAAI,CAAC,GAAGH,QAAQ,IAAIC,QAAQ,EAAE,CAAC;AAE5C,MAAMG,MAAM,GAAGN,KAAK,CAACO,MAAM,CAAC;EAC1BC,OAAO,EAAEP,QAAQ;EACjBQ,OAAO,EAAE;IACP,cAAc,EAAE,kBAAkB;IAClCC,MAAM,EAAE,kBAAkB;IAC1BC,aAAa,EAAE,SAASP,IAAI;EAC9B;AACF,CAAC,CAAC;AAEF,SAASQ,WAAWA,CAACC,KAAK,EAAE;EAC1B,IAAIC,OAAO,GAAG,iBAAiB;EAC/B,IAAIC,MAAM,GAAG,IAAI;EACjB,IAAIC,OAAO,GAAG,IAAI;EAClB,IAAIH,KAAK,CAACI,QAAQ,EAAE;IAClBF,MAAM,GAAGF,KAAK,CAACI,QAAQ,CAACF,MAAM;IAC9BC,OAAO,GAAGH,KAAK,CAACI,QAAQ,CAACC,IAAI;IAC7B,QAAQH,MAAM;MACZ,KAAK,GAAG;QACND,OAAO,GAAG,kBAAkB;QAAE;MAChC,KAAK,GAAG;QACNA,OAAO,GAAG,cAAc;QAAE;MAC5B,KAAK,GAAG;QACNA,OAAO,GAAG,gBAAgB;QAAE;MAC9B,KAAK,GAAG;QACNA,OAAO,GAAG,uBAAuB;QAAE;MACrC,KAAK,GAAG;QACNA,OAAO,GAAG,0BAA0B;QAAE;MACxC;QACEA,OAAO,GAAG,eAAeC,MAAM,EAAE;IACrC;EACF,CAAC,MAAM,IAAIF,KAAK,CAACM,OAAO,EAAE;IACxBL,OAAO,GAAG,sEAAsE;EAClF,CAAC,MAAM;IACLA,OAAO,GAAGD,KAAK,CAACC,OAAO;EACzB;EACA,OAAO;IAAEA,OAAO;IAAEC,MAAM;IAAEC;EAAQ,CAAC;AACrC;AAEA,eAAe;EACb,MAAMI,MAAMA,CAAA,EAAG;IACb,IAAI;MACF,MAAMH,QAAQ,GAAG,MAAMX,MAAM,CAACe,GAAG,CAAC,qBAAqB,CAAC;MACxD,OAAO;QAAEC,OAAO,EAAE,IAAI;QAAEJ,IAAI,EAAED,QAAQ,CAACC;MAAK,CAAC;IAC/C,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdU,OAAO,CAACV,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MACtC,OAAO;QAAES,OAAO,EAAE,KAAK;QAAET,KAAK,EAAED,WAAW,CAACC,KAAK;MAAE,CAAC;IACtD;EACF,CAAC;EACD,MAAMN,MAAMA,CAAC;IAAEiB,KAAK;IAAEC,OAAO;IAAEC,OAAO;IAAEC,UAAU;IAAEZ,MAAM;IAAEa;EAAK,CAAC,EAAE;IAClE,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAMX,MAAM,CAACuB,IAAI,CAAC,QAAQ,EAAE;QAAEL,KAAK;QAAEC,OAAO;QAAEC,OAAO;QAAEC,UAAU;QAAEZ,MAAM;QAAEa;MAAK,CAAC,CAAC;MACnG,OAAO;QAAEN,OAAO,EAAE,IAAI;QAAEJ,IAAI,EAAED,QAAQ,CAACC;MAAK,CAAC;IAC/C,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdU,OAAO,CAACV,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MACtC,OAAO;QAAES,OAAO,EAAE,KAAK;QAAET,KAAK,EAAED,WAAW,CAACC,KAAK;MAAE,CAAC;IACtD;EACF,CAAC;EACD,MAAMiB,MAAMA,CAACC,EAAE,EAAE;IAAEP,KAAK;IAAEC,OAAO;IAAEC,OAAO;IAAEC,UAAU;IAAEZ,MAAM;IAAEa;EAAK,CAAC,EAAE;IACtE,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAMX,MAAM,CAAC0B,GAAG,CAAC,UAAUD,EAAE,EAAE,EAAE;QAAEP,KAAK;QAAEC,OAAO;QAAEC,OAAO;QAAEC,UAAU;QAAEZ,MAAM;QAAEa;MAAK,CAAC,CAAC;MACxG,OAAO;QAAEN,OAAO,EAAE,IAAI;QAAEJ,IAAI,EAAED,QAAQ,CAACC;MAAK,CAAC;IAC/C,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdU,OAAO,CAACV,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MACtC,OAAO;QAAES,OAAO,EAAE,KAAK;QAAET,KAAK,EAAED,WAAW,CAACC,KAAK;MAAE,CAAC;IACtD;EACF,CAAC;EACD,MAAMoB,MAAMA,CAACF,EAAE,EAAE;IACf,IAAI;MACF,MAAMd,QAAQ,GAAG,MAAMX,MAAM,CAAC2B,MAAM,CAAC,UAAUF,EAAE,EAAE,CAAC;MACpD,OAAO;QAAET,OAAO,EAAE,IAAI;QAAEJ,IAAI,EAAED,QAAQ,CAACC;MAAK,CAAC;IAC/C,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdU,OAAO,CAACV,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MACtC,OAAO;QAAES,OAAO,EAAE,KAAK;QAAET,KAAK,EAAED,WAAW,CAACC,KAAK;MAAE,CAAC;IACtD;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}