{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport CardDetails from '../components/CardDetails.vue';\nimport draggable from 'vuedraggable';\nimport { useCategoryStore } from '../store/categoryStore';\nimport { computed, ref } from 'vue';\nimport { storeToRefs } from 'pinia';\nimport Swal from 'sweetalert2';\nimport postService from '../services/postService.js';\nexport default {\n  components: {\n    draggable,\n    CardDetails\n  },\n  setup() {\n    const showTaskModal = ref(false);\n    const selectedTask = ref(null);\n    const selectedCategory = ref(null);\n    function openTaskDetails(task, board) {\n      selectedTask.value = task;\n      selectedCategory.value = board;\n      showTaskModal.value = true;\n    }\n    function closeTaskDetails() {\n      showTaskModal.value = false;\n      selectedTask.value = null;\n      selectedCategory.value = null;\n    }\n    const categoryStore = useCategoryStore();\n    categoryStore.loadCategories().then(() => {\n      console.log('Cat√©gories charg√©es:', categories.value);\n    });\n    const {\n      categories\n    } = storeToRefs(categoryStore);\n    const boards = computed(() => categories.value.map(cat => ({\n      ...cat,\n      title: cat.title || cat.name,\n      tasks: cat.tasks || []\n    })));\n    const createCategory = async () => {\n      const {\n        value: categoryName\n      } = await Swal.fire({\n        title: 'Nom de la nouvelle cat√©gorie',\n        input: 'text',\n        inputPlaceholder: 'Nom de la cat√©gorie',\n        showCancelButton: true,\n        confirmButtonText: 'Cr√©er',\n        cancelButtonText: 'Annuler',\n        inputValidator: value => {\n          if (!value) return 'Vous devez donner un nom √† la cat√©gorie';\n        }\n      });\n      if (categoryName) {\n        await categoryStore.addCategory({\n          name: categoryName\n        });\n        await categoryStore.loadCategories();\n        Swal.fire('Succ√®s', `La cat√©gorie \"${categoryName}\" a √©t√© cr√©√©e avec succ√®s !`, 'success');\n      }\n    };\n    const editCategory = async categoryId => {\n      const category = categories.value.find(cat => cat.id === categoryId);\n      if (!category) return;\n      const {\n        value: newTitle\n      } = await Swal.fire({\n        title: 'Modifier le nom de la cat√©gorie',\n        input: 'text',\n        inputValue: category.title,\n        showCancelButton: true,\n        confirmButtonText: 'Modifier',\n        cancelButtonText: 'Annuler',\n        inputValidator: value => {\n          if (!value) return 'Le nom de la cat√©gorie est obligatoire';\n        }\n      });\n      if (newTitle) {\n        console.log(`üéØ Board: Mise √† jour cat√©gorie ID: ${category.id} avec nouveau nom: \"${newTitle}\"`);\n        const updatePayload = {\n          id: category.id,\n          name: newTitle,\n          slug: category.slug || newTitle.toLowerCase().replace(/\\s+/g, '-'),\n          description: category.description || ''\n        };\n        console.log(`üéØ Board: Payload d'update:`, updatePayload);\n        console.log('[DEBUG] Drag & Drop:', {\n          postId: movedTask.id,\n          newCategoryId: targetCategory.id,\n          payload: {\n            categories: [targetCategory.id]\n          },\n          movedTask,\n          targetCategory\n        });\n        const updateResult = await categoryStore.updateCategory(updatePayload);\n        console.log(`üéØ Board: R√©sultat update:`, updateResult);\n        await categoryStore.loadCategories();\n        console.log(`üéØ Board: Cat√©gories recharg√©es apr√®s update`);\n        if (updateResult.success) {\n          Swal.fire('Succ√®s', 'Nom de la cat√©gorie modifi√© avec succ√®s', 'success');\n        } else {\n          Swal.fire('Erreur', updateResult.error?.message || 'Erreur lors de la mise √† jour', 'error');\n        }\n      }\n    };\n    const deleteCategory = async categoryId => {\n      const category = categories.value.find(cat => cat.id === categoryId);\n      if (!category) return;\n      const confirmation = await Swal.fire({\n        title: '√ätes-vous s√ªr ?',\n        text: `Voulez-vous vraiment supprimer la cat√©gorie \"${category.title}\" ?`,\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Oui, supprimer',\n        cancelButtonText: 'Annuler'\n      });\n      if (confirmation.isConfirmed) {\n        console.log(`üéØ Board: D√©but de suppression cat√©gorie ID: ${categoryId}`);\n        const deleteResult = await categoryStore.deleteCategory(categoryId);\n        console.log(`üéØ Board: R√©sultat suppression:`, deleteResult);\n        await categoryStore.loadCategories();\n        console.log(`üéØ Board: Cat√©gories recharg√©es`);\n        if (deleteResult.success) {\n          Swal.fire('Succ√®s', 'Cat√©gorie supprim√©e avec succ√®s', 'success');\n        } else {\n          Swal.fire('Erreur', deleteResult.error?.message || 'Erreur lors de la suppression', 'error');\n        }\n      }\n    };\n    const addTask = async boardName => {\n      const category = boards.value.find(board => board.name === boardName);\n      if (!category) {\n        Swal.fire('Erreur', 'Cat√©gorie introuvable', 'error');\n        return;\n      }\n      const {\n        value: formValues\n      } = await Swal.fire({\n        title: 'Cr√©er un post',\n        html: `<input id=\"task-title\" class=\"swal2-input\" placeholder=\"Titre\">` + `<textarea id=\"task-content\" class=\"swal2-textarea\" placeholder=\"Description\"></textarea>`,\n        focusConfirm: false,\n        showCancelButton: true,\n        confirmButtonText: 'Cr√©er',\n        cancelButtonText: 'Annuler',\n        preConfirm: () => {\n          const title = document.getElementById('task-title').value;\n          const content = document.getElementById('task-content').value;\n          if (!title) {\n            Swal.showValidationMessage('Le titre est obligatoire');\n          }\n          return {\n            title,\n            content\n          };\n        }\n      });\n      if (formValues) {\n        const response = await postService.create({\n          title: formValues.title,\n          content: formValues.content,\n          categories: [category.id],\n          status: 'publish'\n        });\n        if (response.success) {\n          await categoryStore.loadCategories();\n          Swal.fire('Succ√®s', 'Post cr√©√© avec succ√®s', 'success');\n        } else {\n          Swal.fire('Erreur', response.error?.message || 'Erreur lors de la cr√©ation de la t√¢che', 'error');\n        }\n      }\n    };\n    const editTask = async (boardName, taskIndex) => {\n      const category = boards.value.find(board => board.name === boardName);\n      if (!category) {\n        Swal.fire('Erreur', 'Cat√©gorie introuvable', 'error');\n        return;\n      }\n      const task = category.tasks[taskIndex];\n      // Correction: extraire le titre et le contenu correctement\n      const titleValue = task.title?.rendered || task.title || '';\n      // Nettoyer le contenu HTML pour l'√©dition\n      let contentValue = '';\n      if (task.content?.rendered) {\n        // Supprime les balises HTML\n        const tmp = document.createElement('div');\n        tmp.innerHTML = task.content.rendered;\n        contentValue = tmp.textContent || tmp.innerText || '';\n      } else {\n        contentValue = task.content || '';\n      }\n      const {\n        value: formValues\n      } = await Swal.fire({\n        title: 'Modifier le post',\n        html: `<input id=\"task-title\" class=\"swal2-input\" placeholder=\"Titre\" value=\"${titleValue}\">` + `<textarea id=\"task-content\" class=\"swal2-textarea\" placeholder=\"Description\">${contentValue}</textarea>`,\n        focusConfirm: false,\n        showCancelButton: true,\n        confirmButtonText: 'Modifier',\n        cancelButtonText: 'Annuler',\n        preConfirm: () => {\n          const title = document.getElementById('task-title').value;\n          const content = document.getElementById('task-content').value;\n          if (!title) {\n            Swal.showValidationMessage('Le titre est obligatoire');\n          }\n          return {\n            title,\n            content\n          };\n        }\n      });\n      if (formValues) {\n        const response = await postService.update(task.id, {\n          title: formValues.title,\n          content: formValues.content,\n          categories: [category.id]\n        });\n        if (response.success) {\n          await categoryStore.loadCategories();\n          Swal.fire('Succ√®s', 'T√¢che modifi√©e avec succ√®s', 'success');\n        } else {\n          Swal.fire('Erreur', response.error?.message || 'Erreur lors de la modification de la t√¢che', 'error');\n        }\n      }\n    };\n    const deleteTask = async (boardName, taskIndex) => {\n      const category = boards.value.find(board => board.name === boardName);\n      if (!category) {\n        Swal.fire('Erreur', 'Cat√©gorie introuvable', 'error');\n        return;\n      }\n      const task = category.tasks[taskIndex];\n      const confirmation = await Swal.fire({\n        title: '√ätes-vous s√ªr ?',\n        text: `Voulez-vous vraiment supprimer la t√¢che \"${task.text}\" ?`,\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Oui, supprimer',\n        cancelButtonText: 'Annuler'\n      });\n      if (confirmation.isConfirmed) {\n        const response = await postService.delete(task.id);\n        if (response.success) {\n          await categoryStore.loadCategories();\n          Swal.fire('Succ√®s', 'T√¢che supprim√©e avec succ√®s', 'success');\n        } else {\n          Swal.fire('Erreur', response.error?.message || 'Erreur lors de la suppression de la t√¢che', 'error');\n        }\n      }\n    };\n    const dragSourceLane = ref(null);\n    const handleDragStart = lane => {\n      dragSourceLane.value = lane;\n    };\n    const handleDrop = async (lane, dropResult) => {\n      if (!dropResult || dropResult.removedIndex == null && dropResult.addedIndex == null) return;\n      const sourceCategory = boards.value.find(board => board.name === dragSourceLane.value);\n      const targetCategory = boards.value.find(board => board.name === lane);\n      if (!sourceCategory || !targetCategory) return;\n      let movedTask = null;\n      if (dropResult.removedIndex != null) {\n        movedTask = sourceCategory.tasks.splice(dropResult.removedIndex, 1)[0];\n      }\n      if (dropResult.addedIndex != null && movedTask) {\n        targetCategory.tasks.splice(dropResult.addedIndex, 0, movedTask);\n\n        // 2. Sauvegarde sur WordPress en arri√®re-plan\n        try {\n          console.log('[DEBUG] Drag & Drop:', {\n            postId: movedTask.id,\n            newCategoryId: targetCategory.id,\n            payload: {\n              categories: [targetCategory.id]\n            },\n            movedTask,\n            targetCategory\n          });\n          const updateResult = await postService.update(movedTask.id, {\n            categories: [targetCategory.id]\n          });\n          console.log('[DEBUG] R√©ponse API WordPress:', updateResult);\n          if (updateResult.success) {\n            console.log('Sauvegarde WordPress reussie, deplacement persiste!');\n          } else {\n            console.error('Erreur WordPress, rechargement des categories');\n            // Annuler la mise √† jour optimiste en rechargeant depuis WordPress\n            await categoryStore.loadCategories();\n          }\n        } catch (error) {\n          console.error('Erreur de sauvegarde:', error);\n          // Annuler la mise √† jour optimiste en rechargeant depuis WordPress\n          await categoryStore.loadCategories();\n        }\n      } else if (movedTask) {\n        sourceCategory.tasks.splice(dropResult.removedIndex, 0, movedTask);\n      }\n      dragSourceLane.value = null;\n    };\n    const getChildPayload = index => {\n      return {\n        index\n      };\n    };\n    return {\n      boards,\n      createCategory,\n      editCategory,\n      deleteCategory,\n      addTask,\n      editTask,\n      deleteTask,\n      getChildPayload,\n      handleDragStart,\n      handleDrop,\n      showTaskModal,\n      selectedTask,\n      selectedCategory,\n      openTaskDetails,\n      closeTaskDetails\n    };\n  }\n};","map":{"version":3,"names":["CardDetails","draggable","useCategoryStore","computed","ref","storeToRefs","Swal","postService","components","setup","showTaskModal","selectedTask","selectedCategory","openTaskDetails","task","board","value","closeTaskDetails","categoryStore","loadCategories","then","console","log","categories","boards","map","cat","title","name","tasks","createCategory","categoryName","fire","input","inputPlaceholder","showCancelButton","confirmButtonText","cancelButtonText","inputValidator","addCategory","editCategory","categoryId","category","find","id","newTitle","inputValue","updatePayload","slug","toLowerCase","replace","description","postId","movedTask","newCategoryId","targetCategory","payload","updateResult","updateCategory","success","error","message","deleteCategory","confirmation","text","icon","isConfirmed","deleteResult","addTask","boardName","formValues","html","focusConfirm","preConfirm","document","getElementById","content","showValidationMessage","response","create","status","editTask","taskIndex","titleValue","rendered","contentValue","tmp","createElement","innerHTML","textContent","innerText","update","deleteTask","delete","dragSourceLane","handleDragStart","lane","handleDrop","dropResult","removedIndex","addedIndex","sourceCategory","splice","getChildPayload","index"],"sources":["/Users/akoyessoucristal/Rendu/C-DEV-121-COT-1-1-twp-cristal.akoyessou/src/views/Board.vue"],"sourcesContent":["<template>\n  <div class=\"min-h-screen bg-gradient-to-br from-blue-900 via-blue-700 to-blue-400 py-8 px-2\">\n    <h1 class=\"text-4xl font-bold text-center text-white mb-8 tracking-wide uppercase drop-shadow\">Vos tableaux</h1>\n\n    <main class=\"flex overflow-x-auto gap-6 px-4 pb-16\" style=\"scrollbar-width:thin;\">\n      <div\n        class=\"bg-gray-900/90 rounded-2xl shadow-2xl p-4 w-80 min-w-[320px] flex flex-col gap-4 border border-gray-700\"\n        v-for=\"(board, index) in boards\"\n        :key=\"index\"\n      >\n        <div class=\"flex items-center justify-between mb-2\">\n          <h3 class=\"text-lg font-semibold text-white\">{{ board.title }}</h3>\n          <div class=\"flex gap-2\">\n            <button @click=\"addTask(board.name)\" class=\"bg-blue-600 hover:bg-blue-700 text-white rounded-full p-2 transition shadow\">\n              <i class=\"fas fa-plus\"></i>\n            </button>\n            <button @click=\"deleteCategory(board.id)\" class=\"bg-red-600 hover:bg-red-700 text-white rounded-full p-2 transition shadow\">\n              <i class=\"fas fa-trash\"></i>\n            </button>\n            <button @click=\"editCategory(board.id)\" class=\"bg-yellow-500 hover:bg-yellow-600 text-white rounded-full p-2 transition shadow\">\n              <i class=\"fas fa-edit\"></i>\n            </button>\n          </div>\n        </div>\n\n        <draggable\n          class=\"drag-container min-h-[120px]\"\n          :list=\"board.tasks\"\n          group=\"trello\"\n          itemKey=\"id\"\n          @start=\"handleDragStart(board.name)\"\n          @end=\"handleDrop(board.name, $event)\"\n        >\n          <template #item=\"{ element: task, index }\">\n            <div\n              class=\"task bg-gray-800 rounded-xl shadow p-4 mb-3 flex flex-col gap-2 cursor-pointer hover:bg-gray-700 transition border border-gray-700\"\n              @click=\"openTaskDetails(task, board)\"\n            >\n              <h3 class=\"text-base font-medium text-white\">{{ task.title && task.title.rendered ? task.title.rendered : (task.title || task.text) }}</h3>\n              <div class=\"flex gap-2 mt-2\">\n                <button @click.stop=\"deleteTask(board.name, index)\" class=\"bg-red-500 hover:bg-red-600 text-white rounded-full p-2 transition shadow\">\n                  <i class=\"fas fa-trash\"></i>\n                </button>\n                <button @click.stop=\"editTask(board.name, index)\" class=\"bg-green-500 hover:bg-green-600 text-white rounded-full p-2 transition shadow\">\n                  <i class=\"fas fa-edit\"></i>\n                </button>\n              </div>\n            </div>\n          </template>\n        </draggable>\n      </div>\n    </main>\n\n    <button\n      class=\"fixed bottom-8 right-8 bg-blue-700 hover:bg-blue-800 text-white rounded-full shadow-lg px-6 py-3 text-lg font-semibold flex items-center gap-2 transition\"\n      @click=\"createCategory\"\n    >\n      <i class=\"fas fa-plus\"></i> Nouvelle Cat√©gorie\n    </button>\n\n    <CardDetails\n      v-if=\"showTaskModal\"\n      :task=\"selectedTask\"\n      :categoryName=\"selectedCategory ? selectedCategory.title : 'Cat√©gorie inconnue'\"\n      :isVisible=\"showTaskModal\"\n      @closeModal=\"closeTaskDetails\"\n    />\n  </div>\n</template>\n\n<script>\nimport CardDetails from '../components/CardDetails.vue';\nimport draggable from 'vuedraggable';\nimport { useCategoryStore } from '../store/categoryStore';\nimport { computed, ref } from 'vue';\nimport { storeToRefs } from 'pinia';\nimport Swal from 'sweetalert2';\nimport postService from '../services/postService.js';\n\nexport default {\n  components: {\n    draggable,\n    CardDetails,\n  },\n  setup() {\n    const showTaskModal = ref(false);\n    const selectedTask = ref(null);\n    const selectedCategory = ref(null);\n\n    function openTaskDetails(task, board) {\n      selectedTask.value = task;\n      selectedCategory.value = board;\n      showTaskModal.value = true;\n    }\n    function closeTaskDetails() {\n      showTaskModal.value = false;\n      selectedTask.value = null;\n      selectedCategory.value = null;\n    }\n    const categoryStore = useCategoryStore();\n    categoryStore.loadCategories().then(() => {\n      console.log('Cat√©gories charg√©es:', categories.value);\n    });\n    const { categories } = storeToRefs(categoryStore);\n    const boards = computed(() =>\n      categories.value.map(cat => ({\n        ...cat,\n        title: cat.title || cat.name,\n        tasks: cat.tasks || []\n      }))\n    );\n\n    const createCategory = async () => {\n      const { value: categoryName } = await Swal.fire({\n        title: 'Nom de la nouvelle cat√©gorie',\n        input: 'text',\n        inputPlaceholder: 'Nom de la cat√©gorie',\n        showCancelButton: true,\n        confirmButtonText: 'Cr√©er',\n        cancelButtonText: 'Annuler',\n        inputValidator: value => {\n          if (!value) return 'Vous devez donner un nom √† la cat√©gorie';\n        },\n      });\n      if (categoryName) {\n        await categoryStore.addCategory({ name: categoryName });\n        await categoryStore.loadCategories();\n        Swal.fire(\n          'Succ√®s',\n          `La cat√©gorie \"${categoryName}\" a √©t√© cr√©√©e avec succ√®s !`,\n          'success'\n        );\n      }\n    };\n\n    const editCategory = async categoryId => {\n      const category = categories.value.find(cat => cat.id === categoryId);\n      if (!category) return;\n      const { value: newTitle } = await Swal.fire({\n        title: 'Modifier le nom de la cat√©gorie',\n        input: 'text',\n        inputValue: category.title,\n        showCancelButton: true,\n        confirmButtonText: 'Modifier',\n        cancelButtonText: 'Annuler',\n        inputValidator: value => {\n          if (!value) return 'Le nom de la cat√©gorie est obligatoire';\n        },\n      });\n      if (newTitle) {\n        console.log(`üéØ Board: Mise √† jour cat√©gorie ID: ${category.id} avec nouveau nom: \"${newTitle}\"`);\n        \n        const updatePayload = {\n          id: category.id,\n          name: newTitle,\n          slug: category.slug || newTitle.toLowerCase().replace(/\\s+/g, '-'),\n          description: category.description || ''\n        };\n        \n        console.log(`üéØ Board: Payload d'update:`, updatePayload);\n        console.log('[DEBUG] Drag & Drop:', {\n  postId: movedTask.id,\n  newCategoryId: targetCategory.id,\n  payload: { categories: [targetCategory.id] },\n  movedTask,\n  targetCategory\n});\n        \n        const updateResult = await categoryStore.updateCategory(updatePayload);\n        console.log(`üéØ Board: R√©sultat update:`, updateResult);\n        \n        await categoryStore.loadCategories();\n        console.log(`üéØ Board: Cat√©gories recharg√©es apr√®s update`);\n        \n        if (updateResult.success) {\n          Swal.fire('Succ√®s', 'Nom de la cat√©gorie modifi√© avec succ√®s', 'success');\n        } else {\n          Swal.fire('Erreur', updateResult.error?.message || 'Erreur lors de la mise √† jour', 'error');\n        }\n      }\n    };\n\n    const deleteCategory = async categoryId => {\n      const category = categories.value.find(cat => cat.id === categoryId);\n      if (!category) return;\n      const confirmation = await Swal.fire({\n        title: '√ätes-vous s√ªr ?',\n        text: `Voulez-vous vraiment supprimer la cat√©gorie \"${category.title}\" ?`,\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Oui, supprimer',\n        cancelButtonText: 'Annuler',\n      });\n      if (confirmation.isConfirmed) {\n        console.log(`üéØ Board: D√©but de suppression cat√©gorie ID: ${categoryId}`);\n        \n        const deleteResult = await categoryStore.deleteCategory(categoryId);\n        console.log(`üéØ Board: R√©sultat suppression:`, deleteResult);\n        \n        await categoryStore.loadCategories();\n        console.log(`üéØ Board: Cat√©gories recharg√©es`);\n        \n        if (deleteResult.success) {\n          Swal.fire('Succ√®s', 'Cat√©gorie supprim√©e avec succ√®s', 'success');\n        } else {\n          Swal.fire('Erreur', deleteResult.error?.message || 'Erreur lors de la suppression', 'error');\n        }\n      }\n    };\n\n    const addTask = async boardName => {\n      const category = boards.value.find(board => board.name === boardName);\n      if (!category) {\n        Swal.fire('Erreur', 'Cat√©gorie introuvable', 'error');\n        return;\n      }\n      const { value: formValues } = await Swal.fire({\n        title: 'Cr√©er un post',\n        html:\n          `<input id=\"task-title\" class=\"swal2-input\" placeholder=\"Titre\">` +\n          `<textarea id=\"task-content\" class=\"swal2-textarea\" placeholder=\"Description\"></textarea>`,\n        focusConfirm: false,\n        showCancelButton: true,\n        confirmButtonText: 'Cr√©er',\n        cancelButtonText: 'Annuler',\n        preConfirm: () => {\n          const title = document.getElementById('task-title').value;\n          const content = document.getElementById('task-content').value;\n          if (!title) {\n            Swal.showValidationMessage('Le titre est obligatoire');\n          }\n          return { title, content };\n        },\n      });\n      if (formValues) {\n          const response = await postService.create({\n            title: formValues.title,\n            content: formValues.content,\n            categories: [category.id],\n            status: 'publish',\n          });\n        if (response.success) {\n          await categoryStore.loadCategories();\n          Swal.fire(\n            'Succ√®s',\n            'Post cr√©√© avec succ√®s',\n            'success'\n          );\n        } else {\n          Swal.fire(\n            'Erreur',\n            response.error?.message || 'Erreur lors de la cr√©ation de la t√¢che',\n            'error'\n          );\n        }\n      }\n    };\n\n    const editTask = async (boardName, taskIndex) => {\n      const category = boards.value.find(board => board.name === boardName);\n      if (!category) {\n        Swal.fire('Erreur', 'Cat√©gorie introuvable', 'error');\n        return;\n      }\n      const task = category.tasks[taskIndex];\n      // Correction: extraire le titre et le contenu correctement\n      const titleValue = task.title?.rendered || task.title || '';\n      // Nettoyer le contenu HTML pour l'√©dition\n      let contentValue = '';\n      if (task.content?.rendered) {\n        // Supprime les balises HTML\n        const tmp = document.createElement('div');\n        tmp.innerHTML = task.content.rendered;\n        contentValue = tmp.textContent || tmp.innerText || '';\n      } else {\n        contentValue = task.content || '';\n      }\n      const { value: formValues } = await Swal.fire({\n        title: 'Modifier le post',\n        html:\n          `<input id=\"task-title\" class=\"swal2-input\" placeholder=\"Titre\" value=\"${titleValue}\">` +\n          `<textarea id=\"task-content\" class=\"swal2-textarea\" placeholder=\"Description\">${contentValue}</textarea>`,\n        focusConfirm: false,\n        showCancelButton: true,\n        confirmButtonText: 'Modifier',\n        cancelButtonText: 'Annuler',\n        preConfirm: () => {\n          const title = document.getElementById('task-title').value;\n          const content = document.getElementById('task-content').value;\n          if (!title) {\n            Swal.showValidationMessage('Le titre est obligatoire');\n          }\n          return { title, content };\n        },\n      });\n      if (formValues) {\n        const response = await postService.update(task.id, {\n          title: formValues.title,\n          content: formValues.content,\n          categories: [category.id],\n        });\n        if (response.success) {\n          await categoryStore.loadCategories();\n          Swal.fire(\n            'Succ√®s',\n            'T√¢che modifi√©e avec succ√®s',\n            'success'\n          );\n        } else {\n          Swal.fire(\n            'Erreur',\n            response.error?.message || 'Erreur lors de la modification de la t√¢che',\n            'error'\n          );\n        }\n      }\n    };\n\n    const deleteTask = async (boardName, taskIndex) => {\n      const category = boards.value.find(board => board.name === boardName);\n      if (!category) {\n        Swal.fire('Erreur', 'Cat√©gorie introuvable', 'error');\n        return;\n      }\n      const task = category.tasks[taskIndex];\n      const confirmation = await Swal.fire({\n        title: '√ätes-vous s√ªr ?',\n        text: `Voulez-vous vraiment supprimer la t√¢che \"${task.text}\" ?`,\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Oui, supprimer',\n        cancelButtonText: 'Annuler',\n      });\n      if (confirmation.isConfirmed) {\n        const response = await postService.delete(task.id);\n        if (response.success) {\n          await categoryStore.loadCategories();\n          Swal.fire(\n            'Succ√®s',\n            'T√¢che supprim√©e avec succ√®s',\n            'success'\n          );\n        } else {\n          Swal.fire(\n            'Erreur',\n            response.error?.message || 'Erreur lors de la suppression de la t√¢che',\n            'error'\n          );\n        }\n      }\n    };\n\n    const dragSourceLane = ref(null);\n\n    const handleDragStart = lane => {\n      dragSourceLane.value = lane;\n    };\n\n    const handleDrop = async (lane, dropResult) => {\n      if (!dropResult || (dropResult.removedIndex == null && dropResult.addedIndex == null)) return;\n      const sourceCategory = boards.value.find(board => board.name === dragSourceLane.value);\n      const targetCategory = boards.value.find(board => board.name === lane);\n      if (!sourceCategory || !targetCategory) return;\n      \n      let movedTask = null;\n      if (dropResult.removedIndex != null) {\n        movedTask = sourceCategory.tasks.splice(dropResult.removedIndex, 1)[0];\n      }\n      \n      if (dropResult.addedIndex != null && movedTask) {\n\n        \n        targetCategory.tasks.splice(dropResult.addedIndex, 0, movedTask);\n        \n        // 2. Sauvegarde sur WordPress en arri√®re-plan\n        try {\n          console.log('[DEBUG] Drag & Drop:', {\n  postId: movedTask.id,\n  newCategoryId: targetCategory.id,\n  payload: { categories: [targetCategory.id] },\n  movedTask,\n  targetCategory\n});\nconst updateResult = await postService.update(movedTask.id, {\n  categories: [targetCategory.id]\n});\nconsole.log('[DEBUG] R√©ponse API WordPress:', updateResult);\n          \n          if (updateResult.success) {\n            console.log('Sauvegarde WordPress reussie, deplacement persiste!');\n          } else {\n            console.error('Erreur WordPress, rechargement des categories');\n            // Annuler la mise √† jour optimiste en rechargeant depuis WordPress\n            await categoryStore.loadCategories();\n          }\n        } catch (error) {\n          console.error('Erreur de sauvegarde:', error);\n          // Annuler la mise √† jour optimiste en rechargeant depuis WordPress\n          await categoryStore.loadCategories();\n        }\n      } else if (movedTask) {\n        sourceCategory.tasks.splice(dropResult.removedIndex, 0, movedTask);\n      }\n      \n      dragSourceLane.value = null;\n    };\n\n    const getChildPayload = index => {\n      return { index };\n    };\n\n    return {\n      boards,\n      createCategory,\n      editCategory,\n      deleteCategory,\n      addTask,\n      editTask,\n      deleteTask,\n      getChildPayload,\n      handleDragStart,\n      handleDrop,\n      showTaskModal,\n      selectedTask,\n      selectedCategory,\n      openTaskDetails,\n      closeTaskDetails,\n    };\n   \n  },\n};\n</script>\n\n<style>\n.btn-create-category {\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  background-color: #3498db;\n  color: white;\n  border: none;\n  padding: 15px 20px;\n  border-radius: 50%;\n  font-size: 18px;\n  cursor: pointer;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  transition: all 0.3s ease;\n}\n\n.btn-create-category:hover {\n  background-color: #2980b9;\n  transform: scale(1.1);\n}\n\n.board-view .btn-delete {\n  color: white;\n  margin-left: 10px;\n  background-color: red;\n  border: none;\n  padding: 5px 10px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n.board-view .btn-delete:hover {\n  background-color: darkred;\n}\n\n.btn-edit-category {\n  margin-left: 10px;\n  background-color: #f39c12;\n  color: white;\n  border: none;\n  padding: 5px 10px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n.btn-edit-category:hover {\n  background-color: #e67e22;\n}\n\n.btn-edit-task {\n  margin-left: 10px;\n  background-color: #2ecc71;\n  color: white;\n  border: none;\n  padding: 5px 10px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n.btn-edit-task:hover {\n  background-color: #27ae60;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}