{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, withModifiers as _withModifiers, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, normalizeClass as _normalizeClass, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"min-h-screen bg-board-pattern py-8 px-4\"\n};\nconst _hoisted_2 = {\n  class: \"flex overflow-x-auto gap-6 px-4 pb-16\",\n  style: {\n    \"scrollbar-width\": \"thin\",\n    \"--board-col-width\": \"320px\"\n  }\n};\nconst _hoisted_3 = {\n  class: \"flex items-center justify-between mb-2\"\n};\nconst _hoisted_4 = {\n  class: \"text-lg font-semibold text-white\"\n};\nconst _hoisted_5 = {\n  class: \"flex gap-2\"\n};\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = [\"onClick\"];\nconst _hoisted_9 = [\"onClick\"];\nconst _hoisted_10 = {\n  class: \"text-base font-medium text-white\"\n};\nconst _hoisted_11 = {\n  class: \"flex gap-2 mt-2\"\n};\nconst _hoisted_12 = [\"onClick\"];\nconst _hoisted_13 = [\"onClick\"];\nconst _hoisted_14 = {\n  class: \"self-start bg-column-bg/60 backdrop-blur-sm rounded-lg shadow-column px-2 py-2 w-[var(--add-col-width)] min-w-[var(--add-col-width)] border border-column-border flex items-center\",\n  style: {\n    \"--add-col-width\": \"200px\"\n  }\n};\nconst _hoisted_15 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_draggable = _resolveComponent(\"draggable\");\n  const _component_CardDetails = _resolveComponent(\"CardDetails\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[8] || (_cache[8] = _createElementVNode(\"h1\", {\n    class: \"text-4xl font-bold text-center text-white mb-8 tracking-wide uppercase drop-shadow\"\n  }, \"Vos tableaux\", -1 /* CACHED */)), _createElementVNode(\"main\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.boards, (board, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"rounded-xl shadow-column p-4 w-80 min-w-[320px] flex flex-col gap-4 bg-column-bg/95 border border-column-border backdrop-blur-sm\",\n      key: index\n    }, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"h3\", _hoisted_4, _toDisplayString(board.title), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"button\", {\n      onClick: $event => $setup.addTask(board.name),\n      class: \"bg-blue-600 hover:bg-blue-700 text-white rounded-full p-2 transition shadow\"\n    }, [...(_cache[2] || (_cache[2] = [_createElementVNode(\"i\", {\n      class: \"fas fa-plus\"\n    }, null, -1 /* CACHED */)]))], 8 /* PROPS */, _hoisted_6), _createElementVNode(\"button\", {\n      onClick: $event => $setup.deleteCategory(board.id),\n      class: \"bg-red-600 hover:bg-red-700 text-white rounded-full p-2 transition shadow\"\n    }, [...(_cache[3] || (_cache[3] = [_createElementVNode(\"i\", {\n      class: \"fas fa-trash\"\n    }, null, -1 /* CACHED */)]))], 8 /* PROPS */, _hoisted_7), _createElementVNode(\"button\", {\n      onClick: $event => $setup.editCategory(board.id),\n      class: \"bg-yellow-500 hover:bg-yellow-600 text-white rounded-full p-2 transition shadow\"\n    }, [...(_cache[4] || (_cache[4] = [_createElementVNode(\"i\", {\n      class: \"fas fa-edit\"\n    }, null, -1 /* CACHED */)]))], 8 /* PROPS */, _hoisted_8)])]), _createVNode(_component_draggable, {\n      class: \"drag-container min-h-[120px]\",\n      list: board.tasks,\n      group: \"trello\",\n      itemKey: \"id\",\n      onStart: $event => $setup.handleDragStart(board.name),\n      onEnd: $event => $setup.handleDrop(board.name, $event)\n    }, {\n      item: _withCtx(({\n        element: task,\n        index\n      }) => [_createElementVNode(\"div\", {\n        class: \"task rounded-lg shadow-card p-3 mb-3 flex flex-col gap-2 cursor-pointer bg-card-bg hover:bg-card-hover transition border border-card-border\",\n        onClick: $event => $setup.openTaskDetails(task, board)\n      }, [_createElementVNode(\"h3\", _hoisted_10, _toDisplayString(task.title && task.title.rendered ? task.title.rendered : task.title || task.text), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"button\", {\n        onClick: _withModifiers($event => $setup.deleteTask(board.name, index), [\"stop\"]),\n        class: \"bg-red-500 hover:bg-red-600 text-white rounded-full p-2 transition shadow\"\n      }, [...(_cache[5] || (_cache[5] = [_createElementVNode(\"i\", {\n        class: \"fas fa-trash\"\n      }, null, -1 /* CACHED */)]))], 8 /* PROPS */, _hoisted_12), _createElementVNode(\"button\", {\n        onClick: _withModifiers($event => $setup.editTask(board.name, index), [\"stop\"]),\n        class: \"bg-green-500 hover:bg-green-600 text-white rounded-full p-2 transition shadow\"\n      }, [...(_cache[6] || (_cache[6] = [_createElementVNode(\"i\", {\n        class: \"fas fa-edit\"\n      }, null, -1 /* CACHED */)]))], 8 /* PROPS */, _hoisted_13)])], 8 /* PROPS */, _hoisted_9)]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"list\", \"onStart\", \"onEnd\"])]);\n  }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" Colonne spéciale ultra-compacte (une seule ligne) \"), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $setup.handleInlineAddCategory && $setup.handleInlineAddCategory(...args), [\"prevent\"])),\n    class: \"flex items-center w-full gap-1\"\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.newCategoryName = $event),\n    type: \"text\",\n    placeholder: \"Nouvelle catégorie\",\n    class: \"flex-1 px-2 py-1 rounded-md border border-column-border focus:outline-none focus:ring-2 focus:ring-accent-blue/70 text-[11px] bg-card-bg text-white placeholder:text-accent-blue/70\",\n    maxlength: \"32\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.newCategoryName]]), _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: _normalizeClass([\"bg-accent-blue hover:bg-accent-blue/80 text-white rounded-md h-7 w-7 flex items-center justify-center text-[11px] transition\", {\n      'opacity-50 cursor-not-allowed': !$setup.newCategoryName.trim()\n    }]),\n    disabled: !$setup.newCategoryName.trim()\n  }, [...(_cache[7] || (_cache[7] = [_createElementVNode(\"i\", {\n    class: \"fas fa-plus\"\n  }, null, -1 /* CACHED */)]))], 10 /* CLASS, PROPS */, _hoisted_15)], 32 /* NEED_HYDRATION */)])]), $setup.showTaskModal ? (_openBlock(), _createBlock(_component_CardDetails, {\n    key: 0,\n    task: $setup.selectedTask,\n    categoryName: $setup.selectedCategory ? $setup.selectedCategory.title : 'Catégorie inconnue',\n    isVisible: $setup.showTaskModal,\n    onCloseModal: $setup.closeTaskDetails\n  }, null, 8 /* PROPS */, [\"task\", \"categoryName\", \"isVisible\", \"onCloseModal\"])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","style","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_Fragment","_renderList","$setup","boards","board","index","key","_hoisted_3","_hoisted_4","_toDisplayString","title","_hoisted_5","onClick","$event","addTask","name","deleteCategory","id","editCategory","_createVNode","_component_draggable","list","tasks","group","itemKey","onStart","handleDragStart","onEnd","handleDrop","item","_withCtx","element","task","openTaskDetails","_hoisted_10","rendered","text","_hoisted_11","_withModifiers","deleteTask","editTask","_createCommentVNode","_hoisted_14","onSubmit","_cache","args","handleInlineAddCategory","newCategoryName","type","placeholder","maxlength","_normalizeClass","trim","disabled","showTaskModal","_createBlock","_component_CardDetails","selectedTask","categoryName","selectedCategory","isVisible","onCloseModal","closeTaskDetails"],"sources":["/Users/akoyessoucristal/Rendu/C-DEV-121-COT-1-1-twp-cristal.akoyessou/src/views/Board.vue"],"sourcesContent":["<template>\n  <div class=\"min-h-screen bg-board-pattern py-8 px-4\">\n    <h1 class=\"text-4xl font-bold text-center text-white mb-8 tracking-wide uppercase drop-shadow\">Vos tableaux</h1>\n\n  <main class=\"flex overflow-x-auto gap-6 px-4 pb-16\" style=\"scrollbar-width:thin; --board-col-width:320px;\">\n      <div\n        class=\"rounded-xl shadow-column p-4 w-80 min-w-[320px] flex flex-col gap-4 bg-column-bg/95 border border-column-border backdrop-blur-sm\"\n        v-for=\"(board, index) in boards\"\n        :key=\"index\"\n      >\n        <div class=\"flex items-center justify-between mb-2\">\n          <h3 class=\"text-lg font-semibold text-white\">{{ board.title }}</h3>\n          <div class=\"flex gap-2\">\n            <button @click=\"addTask(board.name)\" class=\"bg-blue-600 hover:bg-blue-700 text-white rounded-full p-2 transition shadow\">\n              <i class=\"fas fa-plus\"></i>\n            </button>\n            <button @click=\"deleteCategory(board.id)\" class=\"bg-red-600 hover:bg-red-700 text-white rounded-full p-2 transition shadow\">\n              <i class=\"fas fa-trash\"></i>\n            </button>\n            <button @click=\"editCategory(board.id)\" class=\"bg-yellow-500 hover:bg-yellow-600 text-white rounded-full p-2 transition shadow\">\n              <i class=\"fas fa-edit\"></i>\n            </button>\n          </div>\n        </div>\n\n        <draggable\n          class=\"drag-container min-h-[120px]\"\n          :list=\"board.tasks\"\n          group=\"trello\"\n          itemKey=\"id\"\n          @start=\"handleDragStart(board.name)\"\n          @end=\"handleDrop(board.name, $event)\"\n        >\n          <template #item=\"{ element: task, index }\">\n            <div\n              class=\"task rounded-lg shadow-card p-3 mb-3 flex flex-col gap-2 cursor-pointer bg-card-bg hover:bg-card-hover transition border border-card-border\"\n              @click=\"openTaskDetails(task, board)\"\n            >\n              <h3 class=\"text-base font-medium text-white\">{{ task.title && task.title.rendered ? task.title.rendered : (task.title || task.text) }}</h3>\n              <div class=\"flex gap-2 mt-2\">\n                <button @click.stop=\"deleteTask(board.name, index)\" class=\"bg-red-500 hover:bg-red-600 text-white rounded-full p-2 transition shadow\">\n                  <i class=\"fas fa-trash\"></i>\n                </button>\n                <button @click.stop=\"editTask(board.name, index)\" class=\"bg-green-500 hover:bg-green-600 text-white rounded-full p-2 transition shadow\">\n                  <i class=\"fas fa-edit\"></i>\n                </button>\n              </div>\n            </div>\n          </template>\n        </draggable>\n      </div>\n\n    <!-- Colonne spéciale ultra-compacte (une seule ligne) -->\n  <div class=\"self-start bg-column-bg/60 backdrop-blur-sm rounded-lg shadow-column px-2 py-2 w-[var(--add-col-width)] min-w-[var(--add-col-width)] border border-column-border flex items-center\" style=\"--add-col-width:200px;\">\n        <form @submit.prevent=\"handleInlineAddCategory\" class=\"flex items-center w-full gap-1\">\n          <input v-model=\"newCategoryName\" type=\"text\" placeholder=\"Nouvelle catégorie\" class=\"flex-1 px-2 py-1 rounded-md border border-column-border focus:outline-none focus:ring-2 focus:ring-accent-blue/70 text-[11px] bg-card-bg text-white placeholder:text-accent-blue/70\" maxlength=\"32\" />\n          <button type=\"submit\" class=\"bg-accent-blue hover:bg-accent-blue/80 text-white rounded-md h-7 w-7 flex items-center justify-center text-[11px] transition\" :disabled=\"!newCategoryName.trim()\" :class=\"{'opacity-50 cursor-not-allowed': !newCategoryName.trim()}\">\n            <i class=\"fas fa-plus\"></i>\n          </button>\n        </form>\n      </div>\n    </main>\n\n    <CardDetails\n      v-if=\"showTaskModal\"\n      :task=\"selectedTask\"\n      :categoryName=\"selectedCategory ? selectedCategory.title : 'Catégorie inconnue'\"\n      :isVisible=\"showTaskModal\"\n      @closeModal=\"closeTaskDetails\"\n    />\n  </div>\n</template>\n\n<script>\nimport CardDetails from '../components/CardDetails.vue';\nimport draggable from 'vuedraggable';\nimport { useCategoryStore } from '../store/categoryStore';\nimport { computed, ref } from 'vue';\nimport { storeToRefs } from 'pinia';\nimport Swal from 'sweetalert2';\nimport postService from '../services/postService.js';\n\nexport default {\n  components: {\n    draggable,\n    CardDetails,\n  },\n  setup() {\n    const showTaskModal = ref(false);\n    const selectedTask = ref(null);\n    const selectedCategory = ref(null);\n\n    function openTaskDetails(task, board) {\n      selectedTask.value = task;\n      selectedCategory.value = board;\n      showTaskModal.value = true;\n    }\n    function closeTaskDetails() {\n      showTaskModal.value = false;\n      selectedTask.value = null;\n      selectedCategory.value = null;\n    }\n    const categoryStore = useCategoryStore();\n    categoryStore.loadCategories().then(() => {\n      console.log('Catégories chargées:', categories.value);\n    });\n    const { categories } = storeToRefs(categoryStore);\n    const boards = computed(() =>\n      categories.value.map(cat => ({\n        ...cat,\n        title: cat.title || cat.name,\n        tasks: cat.tasks || []\n      }))\n    );\n\n    const newCategoryName = ref(\"\");\n    const addCategoryError = ref(\"\");\n    const handleInlineAddCategory = async () => {\n      addCategoryError.value = \"\";\n      const name = newCategoryName.value.trim();\n      if (!name) {\n        addCategoryError.value = \"Le nom est obligatoire.\";\n        return;\n      }\n      if (name.length > 32) {\n        addCategoryError.value = \"32 caractères max.\";\n        return;\n      }\n      await categoryStore.addCategory({ name });\n      await categoryStore.loadCategories();\n      newCategoryName.value = \"\";\n    };\n\n    const editCategory = async categoryId => {\n      const category = categories.value.find(cat => cat.id === categoryId);\n      if (!category) return;\n      const { value: newTitle } = await Swal.fire({\n        title: 'Modifier le nom de la catégorie',\n        input: 'text',\n        inputValue: category.title,\n        showCancelButton: true,\n        confirmButtonText: 'Modifier',\n        cancelButtonText: 'Annuler',\n        inputValidator: value => {\n          if (!value) return 'Le nom de la catégorie est obligatoire';\n        },\n      });\n      if (newTitle) {\n        console.log(`🎯 Board: Mise à jour catégorie ID: ${category.id} avec nouveau nom: \"${newTitle}\"`);\n        \n        const updatePayload = {\n          id: category.id,\n          name: newTitle,\n          slug: category.slug || newTitle.toLowerCase().replace(/\\s+/g, '-'),\n          description: category.description || ''\n        };\n  console.log(`🎯 Board: Payload d'update:`, updatePayload);\n        \n        const updateResult = await categoryStore.updateCategory(updatePayload);\n        console.log(`🎯 Board: Résultat update:`, updateResult);\n        \n        await categoryStore.loadCategories();\n        console.log(`🎯 Board: Catégories rechargées après update`);\n        \n        if (updateResult.success) {\n          Swal.fire('Succès', 'Nom de la catégorie modifié avec succès', 'success');\n        } else {\n          Swal.fire('Erreur', updateResult.error?.message || 'Erreur lors de la mise à jour', 'error');\n        }\n      }\n    };\n\n    const deleteCategory = async categoryId => {\n      const category = categories.value.find(cat => cat.id === categoryId);\n      if (!category) return;\n      const confirmation = await Swal.fire({\n        title: 'Êtes-vous sûr ?',\n        text: `Voulez-vous vraiment supprimer la catégorie \"${category.title}\" ?`,\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Oui, supprimer',\n        cancelButtonText: 'Annuler',\n      });\n      if (confirmation.isConfirmed) {\n        console.log(`🎯 Board: Début de suppression catégorie ID: ${categoryId}`);\n        \n        const deleteResult = await categoryStore.deleteCategory(categoryId);\n        console.log(`🎯 Board: Résultat suppression:`, deleteResult);\n        \n        await categoryStore.loadCategories();\n        console.log(`🎯 Board: Catégories rechargées`);\n        \n        if (deleteResult.success) {\n          Swal.fire('Succès', 'Catégorie supprimée avec succès', 'success');\n        } else {\n          Swal.fire('Erreur', deleteResult.error?.message || 'Erreur lors de la suppression', 'error');\n        }\n      }\n    };\n\n    const addTask = async boardName => {\n      const category = boards.value.find(board => board.name === boardName);\n      if (!category) {\n        Swal.fire('Erreur', 'Catégorie introuvable', 'error');\n        return;\n      }\n      const { value: formValues } = await Swal.fire({\n        title: 'Créer un post',\n        html:\n          `<input id=\"task-title\" class=\"swal2-input\" placeholder=\"Titre\">` +\n          `<textarea id=\"task-content\" class=\"swal2-textarea\" placeholder=\"Description\"></textarea>`,\n        focusConfirm: false,\n        showCancelButton: true,\n        confirmButtonText: 'Créer',\n        cancelButtonText: 'Annuler',\n        preConfirm: () => {\n          const title = document.getElementById('task-title').value;\n          const content = document.getElementById('task-content').value;\n          if (!title) {\n            Swal.showValidationMessage('Le titre est obligatoire');\n          }\n          return { title, content };\n        },\n      });\n      if (formValues) {\n          const response = await postService.create({\n            title: formValues.title,\n            content: formValues.content,\n            categories: [category.id],\n            status: 'publish',\n          });\n        if (response.success) {\n          await categoryStore.loadCategories();\n          Swal.fire(\n            'Succès',\n            'Post créé avec succès',\n            'success'\n          );\n        } else {\n          Swal.fire(\n            'Erreur',\n            response.error?.message || 'Erreur lors de la création de la tâche',\n            'error'\n          );\n        }\n      }\n    };\n\n    const editTask = async (boardName, taskIndex) => {\n      const category = boards.value.find(board => board.name === boardName);\n      if (!category) {\n        Swal.fire('Erreur', 'Catégorie introuvable', 'error');\n        return;\n      }\n      const task = category.tasks[taskIndex];\n      // Correction: extraire le titre et le contenu correctement\n      const titleValue = task.title?.rendered || task.title || '';\n      // Nettoyer le contenu HTML pour l'édition\n      let contentValue = '';\n      if (task.content?.rendered) {\n        // Supprime les balises HTML\n        const tmp = document.createElement('div');\n        tmp.innerHTML = task.content.rendered;\n        contentValue = tmp.textContent || tmp.innerText || '';\n      } else {\n        contentValue = task.content || '';\n      }\n      const { value: formValues } = await Swal.fire({\n        title: 'Modifier le post',\n        html:\n          `<input id=\"task-title\" class=\"swal2-input\" placeholder=\"Titre\" value=\"${titleValue}\">` +\n          `<textarea id=\"task-content\" class=\"swal2-textarea\" placeholder=\"Description\">${contentValue}</textarea>`,\n        focusConfirm: false,\n        showCancelButton: true,\n        confirmButtonText: 'Modifier',\n        cancelButtonText: 'Annuler',\n        preConfirm: () => {\n          const title = document.getElementById('task-title').value;\n          const content = document.getElementById('task-content').value;\n          if (!title) {\n            Swal.showValidationMessage('Le titre est obligatoire');\n          }\n          return { title, content };\n        },\n      });\n      if (formValues) {\n        const response = await postService.update(task.id, {\n          title: formValues.title,\n          content: formValues.content,\n          categories: [category.id],\n        });\n        if (response.success) {\n          await categoryStore.loadCategories();\n          Swal.fire(\n            'Succès',\n            'Tâche modifiée avec succès',\n            'success'\n          );\n        } else {\n          Swal.fire(\n            'Erreur',\n            response.error?.message || 'Erreur lors de la modification de la tâche',\n            'error'\n          );\n        }\n      }\n    };\n\n    const deleteTask = async (boardName, taskIndex) => {\n      const category = boards.value.find(board => board.name === boardName);\n      if (!category) {\n        Swal.fire('Erreur', 'Catégorie introuvable', 'error');\n        return;\n      }\n      const task = category.tasks[taskIndex];\n      const confirmation = await Swal.fire({\n        title: 'Êtes-vous sûr ?',\n        text: `Voulez-vous vraiment supprimer la tâche \"${task.text}\" ?`,\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Oui, supprimer',\n        cancelButtonText: 'Annuler',\n      });\n      if (confirmation.isConfirmed) {\n        const response = await postService.delete(task.id);\n        if (response.success) {\n          await categoryStore.loadCategories();\n          Swal.fire(\n            'Succès',\n            'Tâche supprimée avec succès',\n            'success'\n          );\n        } else {\n          Swal.fire(\n            'Erreur',\n            response.error?.message || 'Erreur lors de la suppression de la tâche',\n            'error'\n          );\n        }\n      }\n    };\n\n    const dragSourceLane = ref(null);\n\n    const handleDragStart = lane => {\n      dragSourceLane.value = lane;\n    };\n\n    const handleDrop = async (lane, dropResult) => {\n      if (!dropResult || (dropResult.removedIndex == null && dropResult.addedIndex == null)) return;\n      const sourceCategory = boards.value.find(board => board.name === dragSourceLane.value);\n      const targetCategory = boards.value.find(board => board.name === lane);\n      if (!sourceCategory || !targetCategory) return;\n      \n      let movedTask = null;\n      if (dropResult.removedIndex != null) {\n        movedTask = sourceCategory.tasks.splice(dropResult.removedIndex, 1)[0];\n      }\n      \n      if (dropResult.addedIndex != null && movedTask) {\n\n        \n        targetCategory.tasks.splice(dropResult.addedIndex, 0, movedTask);\n        \n        // 2. Sauvegarde sur WordPress en arrière-plan\n        try {\n          console.log('[DEBUG] Drag & Drop:', {\n  postId: movedTask.id,\n  newCategoryId: targetCategory.id,\n  payload: { categories: [targetCategory.id] },\n  movedTask,\n  targetCategory\n});\nconst updateResult = await postService.update(movedTask.id, {\n  categories: [targetCategory.id]\n});\nconsole.log('[DEBUG] Réponse API WordPress:', updateResult);\n          \n          if (updateResult.success) {\n            console.log('Sauvegarde WordPress reussie, deplacement persiste!');\n          } else {\n            console.error('Erreur WordPress, rechargement des categories');\n            // Annuler la mise à jour optimiste en rechargeant depuis WordPress\n            await categoryStore.loadCategories();\n          }\n        } catch (error) {\n          console.error('Erreur de sauvegarde:', error);\n          // Annuler la mise à jour optimiste en rechargeant depuis WordPress\n          await categoryStore.loadCategories();\n        }\n      } else if (movedTask) {\n        sourceCategory.tasks.splice(dropResult.removedIndex, 0, movedTask);\n      }\n      \n      dragSourceLane.value = null;\n    };\n\n    const getChildPayload = index => {\n      return { index };\n    };\n\n    return {\n      boards,\n      editCategory,\n      deleteCategory,\n      addTask,\n      editTask,\n      deleteTask,\n      getChildPayload,\n      handleDragStart,\n      handleDrop,\n      showTaskModal,\n      selectedTask,\n      selectedCategory,\n      openTaskDetails,\n      closeTaskDetails,\n  // Inline add category form\n  newCategoryName,\n  addCategoryError,\n  handleInlineAddCategory,\n    };\n   \n  },\n};\n</script>\n\n<style>\n.btn-create-category {\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  background-color: #3498db;\n  color: white;\n  border: none;\n  padding: 15px 20px;\n  border-radius: 50%;\n  font-size: 18px;\n  cursor: pointer;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  transition: all 0.3s ease;\n}\n\n.btn-create-category:hover {\n  background-color: #2980b9;\n  transform: scale(1.1);\n}\n\n.board-view .btn-delete {\n  color: white;\n  margin-left: 10px;\n  background-color: red;\n  border: none;\n  padding: 5px 10px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n.board-view .btn-delete:hover {\n  background-color: darkred;\n}\n\n.btn-edit-category {\n  margin-left: 10px;\n  background-color: #f39c12;\n  color: white;\n  border: none;\n  padding: 5px 10px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n.btn-edit-category:hover {\n  background-color: #e67e22;\n}\n\n.btn-edit-task {\n  margin-left: 10px;\n  background-color: #2ecc71;\n  color: white;\n  border: none;\n  padding: 5px 10px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n.btn-edit-task:hover {\n  background-color: #27ae60;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}