{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, normalizeStyle as _normalizeStyle, TransitionGroup as _TransitionGroup, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"toast-container\"\n};\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = {\n  class: \"toast-icon\"\n};\nconst _hoisted_4 = {\n  class: \"toast-content\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"toast-title\"\n};\nconst _hoisted_6 = {\n  class: \"toast-message\"\n};\nconst _hoisted_7 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_TransitionGroup, {\n    name: \"toast\",\n    tag: \"div\"\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.toasts, toast => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: toast.id,\n        class: _normalizeClass(['toast', `toast-${toast.type}`]),\n        onClick: $event => $options.removeToast(toast.id)\n      }, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"i\", {\n        class: _normalizeClass($options.getToastIcon(toast.type))\n      }, null, 2 /* CLASS */)]), _createElementVNode(\"div\", _hoisted_4, [toast.title ? (_openBlock(), _createElementBlock(\"h4\", _hoisted_5, _toDisplayString(toast.title), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"p\", _hoisted_6, _toDisplayString(toast.message), 1 /* TEXT */)]), _createElementVNode(\"button\", {\n        class: \"toast-close\",\n        onClick: _withModifiers($event => $options.removeToast(toast.id), [\"stop\"])\n      }, [...(_cache[0] || (_cache[0] = [_createElementVNode(\"i\", {\n        class: \"fas fa-times\"\n      }, null, -1 /* CACHED */)]))], 8 /* PROPS */, _hoisted_7), _createElementVNode(\"div\", {\n        class: \"toast-progress\",\n        style: _normalizeStyle({\n          animationDuration: `${toast.duration}ms`\n        })\n      }, null, 4 /* STYLE */)], 10 /* CLASS, PROPS */, _hoisted_2);\n    }), 128 /* KEYED_FRAGMENT */))]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_TransitionGroup","name","tag","_Fragment","_renderList","$data","toasts","toast","key","id","_normalizeClass","type","onClick","$event","$options","removeToast","_createElementVNode","_hoisted_3","getToastIcon","_hoisted_4","title","_hoisted_5","_toDisplayString","_hoisted_6","message","_withModifiers","style","_normalizeStyle","animationDuration","duration"],"sources":["/Users/akoyessoucristal/Rendu/C-DEV-121-COT-1-1-twp-cristal.akoyessou/src/components/ToastNotification.vue"],"sourcesContent":["<template>\n  <div class=\"toast-container\">\n    <transition-group name=\"toast\" tag=\"div\">\n      <div\n        v-for=\"toast in toasts\"\n        :key=\"toast.id\"\n        :class=\"['toast', `toast-${toast.type}`]\"\n        @click=\"removeToast(toast.id)\"\n      >\n        <div class=\"toast-icon\">\n          <i :class=\"getToastIcon(toast.type)\"></i>\n        </div>\n        <div class=\"toast-content\">\n          <h4 v-if=\"toast.title\" class=\"toast-title\">{{ toast.title }}</h4>\n          <p class=\"toast-message\">{{ toast.message }}</p>\n        </div>\n        <button class=\"toast-close\" @click.stop=\"removeToast(toast.id)\">\n          <i class=\"fas fa-times\"></i>\n        </button>\n        <div class=\"toast-progress\" :style=\"{ animationDuration: `${toast.duration}ms` }\"></div>\n      </div>\n    </transition-group>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ToastNotification',\n\n  data() {\n    return {\n      toasts: [],\n      nextId: 1,\n    };\n  },\n\n  methods: {\n    show({ type = 'info', title = null, message, duration = 5000 }) {\n      const toast = {\n        id: this.nextId++,\n        type,\n        title,\n        message,\n        duration,\n      };\n\n      this.toasts.push(toast);\n\n      // Auto-remove after duration\n      setTimeout(() => {\n        this.removeToast(toast.id);\n      }, duration);\n\n      return toast.id;\n    },\n\n    removeToast(id) {\n      const index = this.toasts.findIndex(t => t.id === id);\n      if (index > -1) {\n        this.toasts.splice(index, 1);\n      }\n    },\n\n    getToastIcon(type) {\n      const icons = {\n        success: 'fas fa-check-circle',\n        error: 'fas fa-exclamation-triangle',\n        warning: 'fas fa-exclamation-circle',\n        info: 'fas fa-info-circle',\n        loading: 'fas fa-spinner fa-spin',\n      };\n      return icons[type] || icons.info;\n    },\n\n    // API methods for easy usage\n    success(message, title = null, duration = 4000) {\n      return this.show({ type: 'success', title, message, duration });\n    },\n\n    error(message, title = 'Erreur', duration = 6000) {\n      return this.show({ type: 'error', title, message, duration });\n    },\n\n    warning(message, title = 'Attention', duration = 5000) {\n      return this.show({ type: 'warning', title, message, duration });\n    },\n\n    info(message, title = null, duration = 4000) {\n      return this.show({ type: 'info', title, message, duration });\n    },\n\n    loading(message, title = 'Chargement...', duration = 10000) {\n      return this.show({ type: 'loading', title, message, duration });\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.toast-container {\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  z-index: 9999;\n  pointer-events: none;\n  max-width: 400px;\n  width: 100%;\n}\n\n.toast {\n  position: relative;\n  background: white;\n  border-radius: 12px;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);\n  margin-bottom: 15px;\n  padding: 16px;\n  display: flex;\n  align-items: flex-start;\n  gap: 12px;\n  cursor: pointer;\n  pointer-events: auto;\n  overflow: hidden;\n  min-height: 70px;\n  transition: all 0.3s ease;\n  border-left: 4px solid transparent;\n\n  &:hover {\n    transform: translateX(-5px);\n    box-shadow: 0 15px 40px rgba(0, 0, 0, 0.2);\n  }\n\n  &.toast-success {\n    border-left-color: #27ae60;\n\n    .toast-icon {\n      color: #27ae60;\n    }\n  }\n\n  &.toast-error {\n    border-left-color: #e74c3c;\n\n    .toast-icon {\n      color: #e74c3c;\n    }\n  }\n\n  &.toast-warning {\n    border-left-color: #f39c12;\n\n    .toast-icon {\n      color: #f39c12;\n    }\n  }\n\n  &.toast-info {\n    border-left-color: #3498db;\n\n    .toast-icon {\n      color: #3498db;\n    }\n  }\n\n  &.toast-loading {\n    border-left-color: #667eea;\n\n    .toast-icon {\n      color: #667eea;\n    }\n  }\n\n  .toast-icon {\n    font-size: 20px;\n    margin-top: 2px;\n    flex-shrink: 0;\n  }\n\n  .toast-content {\n    flex: 1;\n    min-width: 0;\n\n    .toast-title {\n      font-size: 14px;\n      font-weight: 600;\n      color: #2c3e50;\n      margin: 0 0 4px 0;\n      line-height: 1.3;\n    }\n\n    .toast-message {\n      font-size: 13px;\n      color: #7f8c8d;\n      margin: 0;\n      line-height: 1.4;\n      word-wrap: break-word;\n    }\n  }\n\n  .toast-close {\n    background: none;\n    border: none;\n    color: #95a5a6;\n    cursor: pointer;\n    padding: 4px;\n    border-radius: 4px;\n    font-size: 14px;\n    flex-shrink: 0;\n    transition: all 0.3s ease;\n\n    &:hover {\n      background: rgba(149, 165, 166, 0.1);\n      color: #7f8c8d;\n    }\n  }\n\n  .toast-progress {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    height: 3px;\n    background: currentColor;\n    opacity: 0.3;\n    animation: progressBar linear forwards;\n    transform-origin: left;\n  }\n}\n\n@keyframes progressBar {\n  from {\n    transform: scaleX(1);\n  }\n  to {\n    transform: scaleX(0);\n  }\n}\n\n// Toast animations\n.toast-enter-active {\n  transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n}\n\n.toast-leave-active {\n  transition: all 0.3s ease-in;\n}\n\n.toast-enter-from {\n  transform: translateX(100%);\n  opacity: 0;\n}\n\n.toast-leave-to {\n  transform: translateX(100%);\n  opacity: 0;\n}\n\n.toast-move {\n  transition: transform 0.3s ease;\n}\n\n// Responsive\n@media (max-width: 768px) {\n  .toast-container {\n    top: 10px;\n    right: 10px;\n    left: 10px;\n    max-width: none;\n  }\n\n  .toast {\n    margin-bottom: 10px;\n    padding: 14px;\n\n    .toast-icon {\n      font-size: 18px;\n    }\n\n    .toast-content {\n      .toast-title {\n        font-size: 13px;\n      }\n\n      .toast-message {\n        font-size: 12px;\n      }\n    }\n  }\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAiB;;;EAQjBA,KAAK,EAAC;AAAY;;EAGlBA,KAAK,EAAC;AAAe;;;EACDA,KAAK,EAAC;;;EAC1BA,KAAK,EAAC;AAAe;;;uBAbhCC,mBAAA,CAqBM,OArBNC,UAqBM,GApBJC,YAAA,CAmBmBC,gBAAA;IAnBDC,IAAI,EAAC,OAAO;IAACC,GAAG,EAAC;;sBAE/B,MAAuB,E,kBADzBL,mBAAA,CAiBMM,SAAA,QAAAC,WAAA,CAhBYC,KAAA,CAAAC,MAAM,EAAfC,KAAK;2BADdV,mBAAA,CAiBM;QAfHW,GAAG,EAAED,KAAK,CAACE,EAAE;QACbb,KAAK,EAAAc,eAAA,oBAAqBH,KAAK,CAACI,IAAI;QACpCC,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,WAAW,CAACR,KAAK,CAACE,EAAE;UAE5BO,mBAAA,CAEM,OAFNC,UAEM,GADJD,mBAAA,CAAyC;QAArCpB,KAAK,EAAAc,eAAA,CAAEI,QAAA,CAAAI,YAAY,CAACX,KAAK,CAACI,IAAI;iCAEpCK,mBAAA,CAGM,OAHNG,UAGM,GAFMZ,KAAK,CAACa,KAAK,I,cAArBvB,mBAAA,CAAiE,MAAjEwB,UAAiE,EAAAC,gBAAA,CAAnBf,KAAK,CAACa,KAAK,oB,mCACzDJ,mBAAA,CAAgD,KAAhDO,UAAgD,EAAAD,gBAAA,CAApBf,KAAK,CAACiB,OAAO,iB,GAE3CR,mBAAA,CAES;QAFDpB,KAAK,EAAC,aAAa;QAAEgB,OAAK,EAAAa,cAAA,CAAAZ,MAAA,IAAOC,QAAA,CAAAC,WAAW,CAACR,KAAK,CAACE,EAAE;yCAC3DO,mBAAA,CAA4B;QAAzBpB,KAAK,EAAC;MAAc,0B,iCAEzBoB,mBAAA,CAAwF;QAAnFpB,KAAK,EAAC,gBAAgB;QAAE8B,KAAK,EAAAC,eAAA;UAAAC,iBAAA,KAA0BrB,KAAK,CAACsB,QAAQ;QAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}