{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, normalizeStyle as _normalizeStyle, TransitionGroup as _TransitionGroup, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"fixed top-5 right-5 z-[9999] max-w-sm w-full pointer-events-none space-y-3\"\n};\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = {\n  class: \"flex-1 min-w-0\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"text-sm font-semibold text-slate-800 leading-snug mb-1 break-words\"\n};\nconst _hoisted_5 = {\n  class: \"text-xs text-slate-500 leading-snug break-words\"\n};\nconst _hoisted_6 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_TransitionGroup, {\n    name: \"toast\",\n    tag: \"div\"\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.toasts, toast => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: toast.id,\n        onClick: $event => $options.removeToast(toast.id),\n        class: _normalizeClass([\"relative group flex items-start gap-3 rounded-xl bg-white shadow-xl border-l-4 p-4 pr-3 cursor-pointer pointer-events-auto overflow-hidden min-h-[70px] transition-all duration-300 hover:-translate-x-1 hover:shadow-2xl\", $options.toastTypeClasses(toast.type)])\n      }, [_createElementVNode(\"div\", {\n        class: _normalizeClass([\"text-xl mt-0.5 shrink-0\", $options.toastIconColor(toast.type)])\n      }, [_createElementVNode(\"i\", {\n        class: _normalizeClass($options.getToastIcon(toast.type))\n      }, null, 2 /* CLASS */)], 2 /* CLASS */), _createElementVNode(\"div\", _hoisted_3, [toast.title ? (_openBlock(), _createElementBlock(\"h4\", _hoisted_4, _toDisplayString(toast.title), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"p\", _hoisted_5, _toDisplayString(toast.message), 1 /* TEXT */)]), _createElementVNode(\"button\", {\n        class: \"absolute top-2 right-2 text-slate-400 hover:text-slate-600 p-1 rounded hover:bg-slate-100 transition\",\n        onClick: _withModifiers($event => $options.removeToast(toast.id), [\"stop\"])\n      }, [...(_cache[0] || (_cache[0] = [_createElementVNode(\"i\", {\n        class: \"fas fa-times text-sm\"\n      }, null, -1 /* CACHED */)]))], 8 /* PROPS */, _hoisted_6), _createElementVNode(\"div\", {\n        class: _normalizeClass([\"absolute bottom-0 left-0 h-0.5 w-full opacity-40 origin-left animate-toast-progress\", $options.toastBarColor(toast.type)]),\n        style: _normalizeStyle({\n          animationDuration: `${toast.duration}ms`\n        })\n      }, null, 6 /* CLASS, STYLE */)], 10 /* CLASS, PROPS */, _hoisted_2);\n    }), 128 /* KEYED_FRAGMENT */))]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_TransitionGroup","name","tag","_Fragment","_renderList","$data","toasts","toast","key","id","onClick","$event","$options","removeToast","_normalizeClass","toastTypeClasses","type","_createElementVNode","toastIconColor","getToastIcon","_hoisted_3","title","_hoisted_4","_toDisplayString","_hoisted_5","message","_withModifiers","toastBarColor","style","_normalizeStyle","animationDuration","duration"],"sources":["/Users/akoyessoucristal/Rendu/C-DEV-121-COT-1-1-twp-cristal.akoyessou/src/components/ToastNotification.vue"],"sourcesContent":["<template>\n  <div class=\"fixed top-5 right-5 z-[9999] max-w-sm w-full pointer-events-none space-y-3\">\n    <transition-group name=\"toast\" tag=\"div\">\n      <div\n        v-for=\"toast in toasts\"\n        :key=\"toast.id\"\n        @click=\"removeToast(toast.id)\"\n        class=\"relative group flex items-start gap-3 rounded-xl bg-white shadow-xl border-l-4 p-4 pr-3 cursor-pointer pointer-events-auto overflow-hidden min-h-[70px] transition-all duration-300 hover:-translate-x-1 hover:shadow-2xl\"\n        :class=\"toastTypeClasses(toast.type)\"\n      >\n        <div class=\"text-xl mt-0.5 shrink-0\" :class=\"toastIconColor(toast.type)\">\n          <i :class=\"getToastIcon(toast.type)\"></i>\n        </div>\n        <div class=\"flex-1 min-w-0\">\n          <h4\n            v-if=\"toast.title\"\n            class=\"text-sm font-semibold text-slate-800 leading-snug mb-1 break-words\"\n          >\n            {{ toast.title }}\n          </h4>\n          <p class=\"text-xs text-slate-500 leading-snug break-words\">{{ toast.message }}</p>\n        </div>\n        <button\n          class=\"absolute top-2 right-2 text-slate-400 hover:text-slate-600 p-1 rounded hover:bg-slate-100 transition\"\n          @click.stop=\"removeToast(toast.id)\"\n        >\n          <i class=\"fas fa-times text-sm\"></i>\n        </button>\n        <div\n          class=\"absolute bottom-0 left-0 h-0.5 w-full opacity-40 origin-left animate-toast-progress\"\n          :style=\"{ animationDuration: `${toast.duration}ms` }\"\n          :class=\"toastBarColor(toast.type)\"\n        ></div>\n      </div>\n    </transition-group>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ToastNotification',\n\n  data() {\n    return {\n      toasts: [],\n      nextId: 1,\n    };\n  },\n\n  methods: {\n    toastTypeClasses(type) {\n      const base = '';\n      const map = {\n        success: 'border-green-500',\n        error: 'border-red-500',\n        warning: 'border-yellow-500',\n        info: 'border-blue-500',\n        loading: 'border-indigo-500',\n      };\n      return [base, map[type] || map.info];\n    },\n    toastIconColor(type) {\n      const map = {\n        success: 'text-green-500',\n        error: 'text-red-500',\n        warning: 'text-yellow-500',\n        info: 'text-blue-500',\n        loading: 'text-indigo-500',\n      };\n      return map[type] || map.info;\n    },\n    toastBarColor(type) {\n      const map = {\n        success: 'bg-green-500',\n        error: 'bg-red-500',\n        warning: 'bg-yellow-500',\n        info: 'bg-blue-500',\n        loading: 'bg-indigo-500',\n      };\n      return map[type] || map.info;\n    },\n    show({ type = 'info', title = null, message, duration = 5000 }) {\n      const toast = {\n        id: this.nextId++,\n        type,\n        title,\n        message,\n        duration,\n      };\n\n      this.toasts.push(toast);\n\n      // Auto-remove after duration\n      setTimeout(() => {\n        this.removeToast(toast.id);\n      }, duration);\n\n      return toast.id;\n    },\n\n    removeToast(id) {\n      const index = this.toasts.findIndex(t => t.id === id);\n      if (index > -1) {\n        this.toasts.splice(index, 1);\n      }\n    },\n\n    getToastIcon(type) {\n      const icons = {\n        success: 'fas fa-check-circle',\n        error: 'fas fa-exclamation-triangle',\n        warning: 'fas fa-exclamation-circle',\n        info: 'fas fa-info-circle',\n        loading: 'fas fa-spinner fa-spin',\n      };\n      return icons[type] || icons.info;\n    },\n\n    // API methods for easy usage\n    success(message, title = null, duration = 4000) {\n      return this.show({ type: 'success', title, message, duration });\n    },\n\n    error(message, title = 'Erreur', duration = 6000) {\n      return this.show({ type: 'error', title, message, duration });\n    },\n\n    warning(message, title = 'Attention', duration = 5000) {\n      return this.show({ type: 'warning', title, message, duration });\n    },\n\n    info(message, title = null, duration = 4000) {\n      return this.show({ type: 'info', title, message, duration });\n    },\n\n    loading(message, title = 'Chargement...', duration = 10000) {\n      return this.show({ type: 'loading', title, message, duration });\n    },\n  },\n};\n</script>\n<style scoped>\n@keyframes toast-progress {\n  from {\n    transform: scaleX(1);\n  }\n  to {\n    transform: scaleX(0);\n  }\n}\n.animate-toast-progress {\n  animation: toast-progress linear forwards;\n}\n/* Transition group classes (Vue) */\n.toast-enter-active {\n  transition: all 0.45s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n}\n.toast-leave-active {\n  transition: all 0.3s ease-in;\n}\n.toast-enter-from,\n.toast-leave-to {\n  transform: translateX(100%);\n  opacity: 0;\n}\n.toast-move {\n  transition: transform 0.3s ease;\n}\n@media (max-width: 768px) {\n  .fixed.top-5.right-5 {\n    left: 0;\n    right: 0;\n  }\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAA4E;;;EAY5EA,KAAK,EAAC;AAAgB;;;EAGvBA,KAAK,EAAC;;;EAILA,KAAK,EAAC;AAAiD;;;uBAnBlEC,mBAAA,CAkCM,OAlCNC,UAkCM,GAjCJC,YAAA,CAgCmBC,gBAAA;IAhCDC,IAAI,EAAC,OAAO;IAACC,GAAG,EAAC;;sBAE/B,MAAuB,E,kBADzBL,mBAAA,CA8BMM,SAAA,QAAAC,WAAA,CA7BYC,KAAA,CAAAC,MAAM,EAAfC,KAAK;2BADdV,mBAAA,CA8BM;QA5BHW,GAAG,EAAED,KAAK,CAACE,EAAE;QACbC,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,WAAW,CAACN,KAAK,CAACE,EAAE;QAC5Bb,KAAK,EAAAkB,eAAA,EAAC,2NAA2N,EACzNF,QAAA,CAAAG,gBAAgB,CAACR,KAAK,CAACS,IAAI;UAEnCC,mBAAA,CAEM;QAFDrB,KAAK,EAAAkB,eAAA,EAAC,yBAAyB,EAASF,QAAA,CAAAM,cAAc,CAACX,KAAK,CAACS,IAAI;UACpEC,mBAAA,CAAyC;QAArCrB,KAAK,EAAAkB,eAAA,CAAEF,QAAA,CAAAO,YAAY,CAACZ,KAAK,CAACS,IAAI;gDAEpCC,mBAAA,CAQM,OARNG,UAQM,GANIb,KAAK,CAACc,KAAK,I,cADnBxB,mBAAA,CAKK,MALLyB,UAKK,EAAAC,gBAAA,CADAhB,KAAK,CAACc,KAAK,oB,mCAEhBJ,mBAAA,CAAkF,KAAlFO,UAAkF,EAAAD,gBAAA,CAApBhB,KAAK,CAACkB,OAAO,iB,GAE7ER,mBAAA,CAKS;QAJPrB,KAAK,EAAC,sGAAsG;QAC3Gc,OAAK,EAAAgB,cAAA,CAAAf,MAAA,IAAOC,QAAA,CAAAC,WAAW,CAACN,KAAK,CAACE,EAAE;yCAEjCQ,mBAAA,CAAoC;QAAjCrB,KAAK,EAAC;MAAsB,0B,iCAEjCqB,mBAAA,CAIO;QAHLrB,KAAK,EAAAkB,eAAA,EAAC,qFAAqF,EAEnFF,QAAA,CAAAe,aAAa,CAACpB,KAAK,CAACS,IAAI;QAD/BY,KAAK,EAAAC,eAAA;UAAAC,iBAAA,KAA0BvB,KAAK,CAACwB,QAAQ;QAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}